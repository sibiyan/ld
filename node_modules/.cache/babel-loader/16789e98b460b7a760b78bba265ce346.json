{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport MaterialTable from \"material-table\";\n\nfunction Test() {\n  const [orders, setOrders] = useState([]);\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Name\",\n      field: \"name\"\n    }, {\n      title: \"Surname\",\n      field: \"surname\"\n    }, {\n      title: \"Birth Year\",\n      field: \"birthYear\",\n      type: \"numeric\"\n    }, {\n      title: \"Birth Place\",\n      field: \"birthCity\",\n      lookup: {\n        34: \"İstanbul\",\n        63: \"Şanlıurfa\"\n      }\n    }]\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: orders,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test.js"],"names":["React","useState","useEffect","Component","MaterialTable","Test","orders","setOrders","state","setState","columns","title","field","type","lookup","onRowAdd","newData","Promise","resolve","setTimeout","prevState","data","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACC,QAAN,CAAe;AACvCS,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE,WAA9B;AAA2CC,MAAAA,IAAI,EAAE;AAAjD,KAHO,EAIP;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEE,MAAAA,MAAM,EAAE;AAAE,YAAI,UAAN;AAAkB,YAAI;AAAtB;AAHV,KAJO;AAD8B,GAAf,CAA1B;AAaA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,OAAO,EAAEN,KAAK,CAACE,OAFjB;AAGE,IAAA,IAAI,EAAEJ,MAHR;AAIE,IAAA,QAAQ,EAAE;AACRS,MAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACPT,UAAAA,QAAQ,CAACW,SAAS,IAAI;AACpB,kBAAMC,IAAI,GAAG,CAAC,GAAGD,SAAS,CAACC,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACC,IAAL,CAAUN,OAAV;AACA,mBAAO,EAAE,GAAGI,SAAL;AAAgBC,cAAAA;AAAhB,aAAP;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD,CAFM;AAYRE,MAAAA,WAAW,EAAE,CAACP,OAAD,EAAUQ,OAAV,KACX,IAAIP,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAIM,OAAJ,EAAa;AACXf,YAAAA,QAAQ,CAACW,SAAS,IAAI;AACpB,oBAAMC,IAAI,GAAG,CAAC,GAAGD,SAAS,CAACC,IAAd,CAAb;AACAA,cAAAA,IAAI,CAACA,IAAI,CAACI,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BR,OAA9B;AACA,qBAAO,EAAE,GAAGI,SAAL;AAAgBC,gBAAAA;AAAhB,eAAP;AACD,aAJO,CAAR;AAKD;AACF,SATS,EASP,GATO,CAAV;AAUD,OAXD,CAbM;AAyBRK,MAAAA,WAAW,EAAEF,OAAO,IAClB,IAAIP,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACPT,UAAAA,QAAQ,CAACW,SAAS,IAAI;AACpB,kBAAMC,IAAI,GAAG,CAAC,GAAGD,SAAS,CAACC,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACM,MAAL,CAAYN,IAAI,CAACI,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACA,mBAAO,EAAE,GAAGJ,SAAL;AAAgBC,cAAAA;AAAhB,aAAP;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD;AA1BM,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4CD;;AAED,eAAehB,IAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport MaterialTable from \"material-table\";\n\nfunction Test() {\n  const [orders, setOrders] = useState([]);\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"Name\", field: \"name\" },\n      { title: \"Surname\", field: \"surname\" },\n      { title: \"Birth Year\", field: \"birthYear\", type: \"numeric\" },\n      {\n        title: \"Birth Place\",\n        field: \"birthCity\",\n        lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" }\n      }\n    ]\n  });\n\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={orders}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          })\n      }}\n    />\n  );\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}