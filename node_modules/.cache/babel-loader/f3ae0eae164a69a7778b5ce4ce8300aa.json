{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/OrderSummary/OrderSummary.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // import { Button, Container, Header, Select } from \"semantic-ui-react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport { authAxios } from \"../../utils\";\nimport { checkoutURL, orderSummaryURL, addressListURL } from \"../../constants\";\nimport { fetchCart } from \"../../store/actions/cart\";\nimport CheckoutItem from \"./checkout-item\";\nimport { CheckoutPageContainer, CheckoutHeaderContainer, HeaderBlockContainer, TotalContainer, WarningContainer } from \"./checkout.styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 200\n  },\n  tableHead: {\n    background: \"#3f51b5\",\n    color: \"white\",\n    fontWeigth: \"bold\",\n    fontSize: \"20pt\"\n  },\n  tablecell: {\n    fontSize: \"12pt\"\n  }\n}));\n\nconst OrderPreview = props => {\n  const {\n    data\n  } = props;\n  const classes = useStyles(); // console.log(props);\n\n  return (\n    /*#__PURE__*/\n    // <CheckoutPageContainer>\n    //   <CheckoutHeaderContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Product</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Quantity</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Price</span>\n    //     </HeaderBlockContainer>\n    //   </CheckoutHeaderContainer>\n    //   {data && (\n    //     <React.Fragment>\n    //       {data.order_items.map(order_item => (\n    //         <CheckoutItem key={order_item.id} order_item={order_item} />\n    //       ))}\n    //       <br />\n    //       <Typography variant=\"h6\" component=\"h2\">\n    //         TOTAL: {data.total}\n    //       </Typography>\n    //     </React.Fragment>\n    //   )}\n    //   <br></br>\n    //   <Typography variant=\"h6\" component=\"h2\">\n    //     *For payment related queries, please contact the shop.\n    //   </Typography>\n    // </CheckoutPageContainer>\n    React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.TopPadding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      style: {\n        width: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow // style={{\n    //   backgroundColor: \"#3f51b5\",\n    //   color: \"white\",\n    //   fontSize: 20\n    // }}\n    , {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Price\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, data && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, data.order_items.map(order_item => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: order_item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, order_item.item.title), /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, order_item.quantity), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, order_item.final_price));\n    }), /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        backgroundColor: \"#9fa8da\",\n        color: \"white\",\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      colSpan: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, data.total))))))))\n  );\n};\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      loading: false,\n      error: null,\n      success: false,\n      shippingAddresses: [],\n      billingAddresses: [],\n      selectedShippingAddress: null,\n      shop: \"\",\n      place: \"\",\n      mode_of_payment: \"\"\n    };\n\n    this.handleFetchShippingAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(addressListURL(\"S\")).then(res => {\n        this.setState({\n          shippingAddresses: res.data.map(a => {\n            return {\n              key: a.id,\n              text: `${a.place}, ${a.area}, ${a.road_name}`,\n              value: a.id\n            };\n          }),\n          selectedShippingAddress: this.handleGetDefaultAddress(res.data),\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleGetDefaultAddress = addresses => {\n      const filteredAddresses = addresses.filter(el => el.default === true);\n\n      if (filteredAddresses.length > 0) {\n        return filteredAddresses[0].id;\n      }\n\n      return \"\";\n    };\n\n    this.handleFetchOrder = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(orderSummaryURL).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        if (err.response.status === 404) {\n          this.props.history.push(\"/orders\");\n        } else {\n          this.setState({\n            error: err,\n            loading: false\n          });\n        }\n      });\n    };\n\n    this.submit = ev => {\n      ev.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        selectedShippingAddress\n      } = this.state;\n      authAxios.post(checkoutURL, {\n        selectedShippingAddress\n      }).then(res => {\n        this.setState({\n          loading: false,\n          success: true\n        });\n        this.redirectToOrders();\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchOrder();\n    this.handleFetchShippingAddresses();\n  }\n\n  redirectToOrders() {\n    setTimeout(this.props.history.push(\"/orders\"), 10000);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      refreshCart\n    } = this.props;\n    const {\n      data,\n      error,\n      loading,\n      success,\n      shippingAddresses,\n      selectedShippingAddress\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    })), error && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, JSON.stringify(error))), /*#__PURE__*/React.createElement(OrderPreview, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, \"Select Address\"), shippingAddresses.length > 0 ? /*#__PURE__*/React.createElement(Select, {\n      name: \"selectedShippingAddress\",\n      value: selectedShippingAddress,\n      clearable: true,\n      options: shippingAddresses,\n      selection: true,\n      onChange: event => this.handleSelectChangeAddress(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, \"You need to \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 27\n      }\n    }, \"add an address\")), shippingAddresses.length < 1 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, \"You need to add an addresse to complete your purchase\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, \"Confirm Order\"), success && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, \"Your Order is successful\")), /*#__PURE__*/React.createElement(Button, {\n      loading: loading,\n      disabled: loading,\n      primary: true,\n      onClick: this.submit,\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CheckoutForm); // export default CheckoutForm;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/OrderSummary/OrderSummary.js"],"names":["React","Component","Link","connect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","makeStyles","CircularProgress","Container","Alert","AlertTitle","Typography","AddIcon","Button","Select","authAxios","checkoutURL","orderSummaryURL","addressListURL","fetchCart","CheckoutItem","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","useStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","tableHead","background","color","fontWeigth","fontSize","tablecell","OrderPreview","props","data","classes","TopPadding","order_items","map","order_item","id","item","title","quantity","final_price","backgroundColor","total","CheckoutForm","state","loading","error","success","shippingAddresses","billingAddresses","selectedShippingAddress","shop","place","mode_of_payment","handleFetchShippingAddresses","setState","get","then","res","a","key","text","area","road_name","value","handleGetDefaultAddress","catch","err","addresses","filteredAddresses","filter","el","default","length","handleFetchOrder","response","status","history","push","submit","ev","preventDefault","post","redirectToOrders","componentDidMount","setTimeout","render","refreshCart","JSON","stringify","event","handleSelectChangeAddress","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import { Button, Container, Header, Select } from \"semantic-ui-react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\n\nimport { authAxios } from \"../../utils\";\nimport { checkoutURL, orderSummaryURL, addressListURL } from \"../../constants\";\nimport { fetchCart } from \"../../store/actions/cart\";\nimport CheckoutItem from \"./checkout-item\";\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from \"./checkout.styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 200\n  },\n  tableHead: {\n    background: \"#3f51b5\",\n    color: \"white\",\n    fontWeigth: \"bold\",\n    fontSize: \"20pt\"\n  },\n  tablecell: {\n    fontSize: \"12pt\"\n  }\n}));\n\nconst OrderPreview = props => {\n  const { data } = props;\n  const classes = useStyles();\n  // console.log(props);\n\n  return (\n    // <CheckoutPageContainer>\n    //   <CheckoutHeaderContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Product</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Quantity</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Price</span>\n    //     </HeaderBlockContainer>\n    //   </CheckoutHeaderContainer>\n    //   {data && (\n    //     <React.Fragment>\n    //       {data.order_items.map(order_item => (\n    //         <CheckoutItem key={order_item.id} order_item={order_item} />\n    //       ))}\n    //       <br />\n    //       <Typography variant=\"h6\" component=\"h2\">\n    //         TOTAL: {data.total}\n    //       </Typography>\n    //     </React.Fragment>\n    //   )}\n    //   <br></br>\n    //   <Typography variant=\"h6\" component=\"h2\">\n    //     *For payment related queries, please contact the shop.\n    //   </Typography>\n    // </CheckoutPageContainer>\n\n    <Container>\n      <div className={classes.TopPadding}>\n        <TableContainer component={Paper}>\n          <Table\n            className={classes.table}\n            aria-label=\"customized table\"\n            style={{ width: 500 }}\n          >\n            <TableHead>\n              <TableRow\n                // style={{\n                //   backgroundColor: \"#3f51b5\",\n                //   color: \"white\",\n                //   fontSize: 20\n                // }}\n                className={classes.tableHead}\n              >\n                <TableCell align=\"left\">Item</TableCell>\n                <TableCell align=\"left\">Quantity</TableCell>\n                <TableCell align=\"left\">Price</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data && (\n                <React.Fragment>\n                  {data.order_items.map(order_item => {\n                    return (\n                      <TableRow key={order_item.id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {order_item.item.title}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {order_item.quantity}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {order_item.final_price}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  <TableRow\n                    style={{\n                      backgroundColor: \"#9fa8da\",\n                      color: \"white\",\n                      fontSize: 20\n                    }}\n                  >\n                    {/* <TableCell rowSpan={2} /> */}\n                    <TableCell colSpan={2}>Total</TableCell>\n                    <TableCell align=\"left\">{data.total}</TableCell>\n                  </TableRow>\n                </React.Fragment>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </Container>\n  );\n};\n\nclass CheckoutForm extends Component {\n  state = {\n    data: null,\n    loading: false,\n    error: null,\n    success: false,\n    shippingAddresses: [],\n    billingAddresses: [],\n    selectedShippingAddress: null,\n    shop: \"\",\n    place: \"\",\n    mode_of_payment: \"\"\n  };\n\n  componentDidMount() {\n    this.handleFetchOrder();\n    this.handleFetchShippingAddresses();\n  }\n\n  handleFetchShippingAddresses = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(addressListURL(\"S\"))\n      .then(res => {\n        this.setState({\n          shippingAddresses: res.data.map(a => {\n            return {\n              key: a.id,\n              text: `${a.place}, ${a.area}, ${a.road_name}`,\n              value: a.id\n            };\n          }),\n          selectedShippingAddress: this.handleGetDefaultAddress(res.data),\n\n          loading: false\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleGetDefaultAddress = addresses => {\n    const filteredAddresses = addresses.filter(el => el.default === true);\n    if (filteredAddresses.length > 0) {\n      return filteredAddresses[0].id;\n    }\n    return \"\";\n  };\n\n  handleFetchOrder = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(orderSummaryURL)\n      .then(res => {\n        this.setState({ data: res.data, loading: false });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.props.history.push(\"/orders\");\n        } else {\n          this.setState({ error: err, loading: false });\n        }\n      });\n  };\n\n  submit = ev => {\n    ev.preventDefault();\n    this.setState({ loading: true });\n    const { selectedShippingAddress } = this.state;\n    authAxios\n      .post(checkoutURL, {\n        selectedShippingAddress\n      })\n      .then(res => {\n        this.setState({ loading: false, success: true });\n        this.redirectToOrders();\n      })\n      .catch(err => {\n        this.setState({ loading: false, error: err });\n      });\n  };\n\n  redirectToOrders() {\n    setTimeout(this.props.history.push(\"/orders\"), 10000);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { refreshCart } = this.props;\n    const {\n      data,\n      error,\n      loading,\n      success,\n      shippingAddresses,\n      selectedShippingAddress\n    } = this.state;\n\n    return (\n      <div>\n        <Container>\n          {loading && (\n            <div>\n              <CircularProgress color=\"secondary\" />\n            </div>\n          )}\n          {error && (\n            <Alert severity=\"error\">\n              <AlertTitle>{JSON.stringify(error)}</AlertTitle>\n            </Alert>\n          )}\n          <OrderPreview data={data} />\n          <Typography variant=\"h6\" component=\"h2\">\n            Select Address\n          </Typography>\n          {shippingAddresses.length > 0 ? (\n            <Select\n              name=\"selectedShippingAddress\"\n              value={selectedShippingAddress}\n              clearable\n              options={shippingAddresses}\n              selection\n              onChange={event =>\n                this.handleSelectChangeAddress(event.target.value)\n              }\n            />\n          ) : (\n            <p>\n              You need to <Link to=\"/profile\">add an address</Link>\n            </p>\n          )}\n\n          {shippingAddresses.length < 1 ? (\n            <p>You need to add an addresse to complete your purchase</p>\n          ) : (\n            <React.Fragment>\n              {/* <Header>Confirm Order?</Header> */}\n              {/* <h2>Confirm Order</h2> */}\n              <Typography variant=\"h6\" component=\"h2\">\n                Confirm Order\n              </Typography>\n\n              {success && (\n                <Alert severity=\"success\">\n                  <AlertTitle>{\"Your Order is successful\"}</AlertTitle>\n                  {/* This is an error alert — <strong>check it out!</strong> */}\n                </Alert>\n              )}\n              <Button\n                loading={loading}\n                disabled={loading}\n                primary\n                onClick={this.submit}\n                style={{ marginTop: \"10px\" }}\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutForm);\n\n// export default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}