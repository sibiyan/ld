{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Box from \"@material-ui/core/Box\";\n// import Collapse from \"@material-ui/core/Collapse\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Paper from \"@material-ui/core/Paper\";\n// import KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n// import KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n// import Container from \"@material-ui/core/Container\";\n// import Icon from \"@material-ui/core/Icon\";\n// import { userIDURL, userTypeURL, orderListURL } from \"../constants\";\n// import { authAxios } from \"../utils\";\n// const useRowStyles = makeStyles({\n//   root: {\n//     \"& > *\": {\n//       borderBottom: \"unset\",\n//       margin: \"20px\",\n//       padding: \"20px\"\n//     },\n//     orderDtails: {\n//       borderBottom: \"unset\",\n//       margin: \"300px\",\n//       padding: \"20px\"\n//     }\n//   }\n// });\n// const Myapp = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [orders, setOrders] = useState([]);\n//   const [userID, setUserID] = useState(null);\n//   const [userType, setuserType] = useState(null);\n//   const [currentPage, setCurrentPage] = useState(9);\n//   const [ordersPerPage] = useState(5);\n//   const classes = useRowStyles();\n//   useEffect(() => {\n//     const findUserType = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(userTypeURL);\n//       setuserType(res.data);\n//       setLoading(false);\n//     };\n//     findUserType();\n//   }, []);\n//   useEffect(() => {\n//     const findUserID = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(userIDURL);\n//       setUserID(res.data);\n//       setLoading(false);\n//     };\n//     findUserID();\n//   }, []);\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(orderListURL);\n//       setOrders(res.data);\n//       setLoading(false);\n//     };\n//     fetchOrders();\n//   }, []);\n//   // Get current orders\n//   const indexOfLastOrder = currentPage * ordersPerPage;\n//   const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\n//   const currentOrders = orders.slice(indexOfFirstOrder, indexOfLastOrder);\n//   // Change page\n//   const paginate = pageNumber => setCurrentPage(pageNumber);\n//   console.log(ordersPerPage);\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-primary mb-3\">My Blog</h1>\n//       <CustomerTable orders={currentOrders} loading={loading} />\n//       <Pagination\n//         ordersPerPage={ordersPerPage}\n//         totalOrders={orders.length}\n//         paginate={paginate}\n//       />\n//     </div>\n//   );\n// };\n// const Pagination = ({ ordersPerPage, totalOrders, paginate }) => {\n//   const pageNumbers = [];\n//   for (let i = 1; i <= Math.ceil(totalOrders / ordersPerPage); i++) {\n//     pageNumbers.push(i);\n//   }\n//   console.log(ordersPerPage);\n//   return (\n//     <nav>\n//       <ul className=\"pagination\">\n//         {pageNumbers.map(number => (\n//           <li key={number} className=\"page-item\">\n//             <a onClick={() => paginate(number)} className=\"page-link\">\n//               {number}\n//             </a>\n//           </li>\n//         ))}\n//       </ul>\n//     </nav>\n//   );\n// };\n// function CustomerTable(props) {\n//   const { orders } = props;\n//   const { UserType } = props;\n//   const classes = useRowStyles();\n//   return (\n//     <Container maxWidth=\"md\">\n//       <TableContainer component={Paper}>\n//         <Table\n//           aria-label=\"collapsible table\"\n//           className={classes.paperContainer}\n//         >\n//           <TableHead>\n//             <TableRow>\n//               <TableCell />\n//               <TableCell align=\"right\">Shop Name</TableCell>\n//               <TableCell align=\"right\">Total Amount</TableCell>\n//               <TableCell align=\"right\">Date</TableCell>\n//               <TableCell align=\"right\">Order Status</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {orders.map(order => (\n//               <Customer key={order.id} order={order} />\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Container>\n//   );\n// }\n// function Customer(props) {\n//   const { order } = props;\n//   const [open, setOpen] = React.useState(false);\n//   const classes = useRowStyles();\n//   return (\n//     <React.Fragment>\n//       <TableRow className={classes.root}>\n//         <TableCell>\n//           <IconButton\n//             aria-label=\"expand row\"\n//             size=\"small\"\n//             onClick={() => setOpen(!open)}\n//           >\n//             {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n//           </IconButton>\n//         </TableCell>\n//         <TableCell component=\"th\" scope=\"row\">\n//           {order.shop_name}\n//         </TableCell>\n//         {/* <TableCell align=\"right\">{order.shop_name}</TableCell> */}\n//         <TableCell align=\"right\">{order.total}</TableCell>\n//         <TableCell align=\"right\">{order.start_date}</TableCell>\n//         <TableCell align=\"right\">{order.order_status}</TableCell>\n//       </TableRow>\n//       <TableRow>\n//         <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n//           <Collapse in={open} timeout=\"auto\" unmountOnExit>\n//             <Box margin={1}>\n//               <Typography variant=\"h6\" gutterBottom component=\"div\">\n//                 Order Details\n//               </Typography>\n//               <Table size=\"small\" aria-label=\"purchases\">\n//                 <TableHead>\n//                   <TableRow>\n//                     <TableCell>Item</TableCell>\n//                     <TableCell align=\"right\">Quantity</TableCell>\n//                     <TableCell align=\"right\">Total price</TableCell>\n//                   </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                   {order.order_items.map(order_item => (\n//                     <TableRow key={order_item.id}>\n//                       <TableCell component=\"th\" scope=\"row\">\n//                         {order_item.item.title}\n//                       </TableCell>\n//                       <TableCell align=\"right\">{order_item.quantity}</TableCell>\n//                       <TableCell align=\"right\">\n//                         {order_item.final_price}\n//                       </TableCell>\n//                     </TableRow>\n//                   ))}\n//                 </TableBody>\n//               </Table>\n//             </Box>\n//           </Collapse>\n//         </TableCell>\n//       </TableRow>\n//     </React.Fragment>\n//   );\n// }\n// export default Myapp;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/test.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Box from \"@material-ui/core/Box\";\n// import Collapse from \"@material-ui/core/Collapse\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Paper from \"@material-ui/core/Paper\";\n// import KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n// import KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n// import Container from \"@material-ui/core/Container\";\n// import Icon from \"@material-ui/core/Icon\";\n\n// import { userIDURL, userTypeURL, orderListURL } from \"../constants\";\n\n// import { authAxios } from \"../utils\";\n\n// const useRowStyles = makeStyles({\n//   root: {\n//     \"& > *\": {\n//       borderBottom: \"unset\",\n//       margin: \"20px\",\n//       padding: \"20px\"\n//     },\n//     orderDtails: {\n//       borderBottom: \"unset\",\n//       margin: \"300px\",\n//       padding: \"20px\"\n//     }\n//   }\n// });\n\n// const Myapp = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [orders, setOrders] = useState([]);\n//   const [userID, setUserID] = useState(null);\n//   const [userType, setuserType] = useState(null);\n//   const [currentPage, setCurrentPage] = useState(9);\n//   const [ordersPerPage] = useState(5);\n\n//   const classes = useRowStyles();\n\n//   useEffect(() => {\n//     const findUserType = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(userTypeURL);\n//       setuserType(res.data);\n//       setLoading(false);\n//     };\n\n//     findUserType();\n//   }, []);\n\n//   useEffect(() => {\n//     const findUserID = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(userIDURL);\n//       setUserID(res.data);\n//       setLoading(false);\n//     };\n\n//     findUserID();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(orderListURL);\n//       setOrders(res.data);\n//       setLoading(false);\n//     };\n\n//     fetchOrders();\n//   }, []);\n\n//   // Get current orders\n//   const indexOfLastOrder = currentPage * ordersPerPage;\n//   const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\n//   const currentOrders = orders.slice(indexOfFirstOrder, indexOfLastOrder);\n\n//   // Change page\n//   const paginate = pageNumber => setCurrentPage(pageNumber);\n\n//   console.log(ordersPerPage);\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-primary mb-3\">My Blog</h1>\n//       <CustomerTable orders={currentOrders} loading={loading} />\n//       <Pagination\n//         ordersPerPage={ordersPerPage}\n//         totalOrders={orders.length}\n//         paginate={paginate}\n//       />\n//     </div>\n//   );\n// };\n\n// const Pagination = ({ ordersPerPage, totalOrders, paginate }) => {\n//   const pageNumbers = [];\n\n//   for (let i = 1; i <= Math.ceil(totalOrders / ordersPerPage); i++) {\n//     pageNumbers.push(i);\n//   }\n//   console.log(ordersPerPage);\n\n//   return (\n//     <nav>\n//       <ul className=\"pagination\">\n//         {pageNumbers.map(number => (\n//           <li key={number} className=\"page-item\">\n//             <a onClick={() => paginate(number)} className=\"page-link\">\n//               {number}\n//             </a>\n//           </li>\n//         ))}\n//       </ul>\n//     </nav>\n//   );\n// };\n\n// function CustomerTable(props) {\n//   const { orders } = props;\n//   const { UserType } = props;\n//   const classes = useRowStyles();\n//   return (\n//     <Container maxWidth=\"md\">\n//       <TableContainer component={Paper}>\n//         <Table\n//           aria-label=\"collapsible table\"\n//           className={classes.paperContainer}\n//         >\n//           <TableHead>\n//             <TableRow>\n//               <TableCell />\n//               <TableCell align=\"right\">Shop Name</TableCell>\n//               <TableCell align=\"right\">Total Amount</TableCell>\n//               <TableCell align=\"right\">Date</TableCell>\n//               <TableCell align=\"right\">Order Status</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {orders.map(order => (\n//               <Customer key={order.id} order={order} />\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Container>\n//   );\n// }\n\n// function Customer(props) {\n//   const { order } = props;\n//   const [open, setOpen] = React.useState(false);\n//   const classes = useRowStyles();\n\n//   return (\n//     <React.Fragment>\n//       <TableRow className={classes.root}>\n//         <TableCell>\n//           <IconButton\n//             aria-label=\"expand row\"\n//             size=\"small\"\n//             onClick={() => setOpen(!open)}\n//           >\n//             {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n//           </IconButton>\n//         </TableCell>\n//         <TableCell component=\"th\" scope=\"row\">\n//           {order.shop_name}\n//         </TableCell>\n//         {/* <TableCell align=\"right\">{order.shop_name}</TableCell> */}\n//         <TableCell align=\"right\">{order.total}</TableCell>\n//         <TableCell align=\"right\">{order.start_date}</TableCell>\n//         <TableCell align=\"right\">{order.order_status}</TableCell>\n//       </TableRow>\n//       <TableRow>\n//         <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n//           <Collapse in={open} timeout=\"auto\" unmountOnExit>\n//             <Box margin={1}>\n//               <Typography variant=\"h6\" gutterBottom component=\"div\">\n//                 Order Details\n//               </Typography>\n//               <Table size=\"small\" aria-label=\"purchases\">\n//                 <TableHead>\n//                   <TableRow>\n//                     <TableCell>Item</TableCell>\n\n//                     <TableCell align=\"right\">Quantity</TableCell>\n//                     <TableCell align=\"right\">Total price</TableCell>\n//                   </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                   {order.order_items.map(order_item => (\n//                     <TableRow key={order_item.id}>\n//                       <TableCell component=\"th\" scope=\"row\">\n//                         {order_item.item.title}\n//                       </TableCell>\n\n//                       <TableCell align=\"right\">{order_item.quantity}</TableCell>\n//                       <TableCell align=\"right\">\n//                         {order_item.final_price}\n//                       </TableCell>\n//                     </TableRow>\n//                   ))}\n//                 </TableBody>\n//               </Table>\n//             </Box>\n//           </Collapse>\n//         </TableCell>\n//       </TableRow>\n//     </React.Fragment>\n//   );\n// }\n\n// export default Myapp;\n"]},"metadata":{},"sourceType":"module"}