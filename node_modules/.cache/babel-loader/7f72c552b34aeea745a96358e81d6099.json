{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Address.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Redirect } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, placeListURL } from \"../../constants\";\nimport { authAxios } from \"../../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\"; // const useStyles = makeStyles({\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     minWidth: 275\n//   },\n//   bullet: {\n//     display: \"inline-block\",\n//     margin: \"0 2px\",\n//     transform: \"scale(0.8)\"\n//   },\n//   title: {\n//     fontSize: 14\n//   },\n//   pos: {\n//     marginBottom: 12\n//   },\n//   card: {\n//     height: \"100%\",\n//     width: \"100%\",\n//     display: \"flex\",\n//     flexDirection: \"column\"\n//   }\n//   // cardGrid: {\n//   //   paddingTop: theme.spacing(8),\n//   //   paddingBottom: theme.spacing(8)\n//   // },\n//   // paper: {\n//   //   marginTop: theme.spacing(3),\n//   //   marginBottom: theme.spacing(3),\n//   //   padding: theme.spacing(2)\n//   // }\n// }));\n\nconst styles = theme => ({//   // paper: {\n  //   //   display: \"flex\",\n  //   //   flexWrap: \"wrap\",\n  //   //   \"& > *\": {\n  //   //     margin: theme.spacing(3)\n  //   //   }\n  //   // },\n  //   root: {\n  //     minWidth: 275\n  //   },\n  //   bullet: {\n  //     display: \"inline-block\",\n  //     margin: \"0 2px\",\n  //     transform: \"scale(0.8)\"\n  //   },\n  //   title: {\n  //     fontSize: 14\n  //   },\n  //   pos: {\n  //     marginBottom: 12\n  //   },\n  //   tab: {\n  //     flexGrow: 1,\n  //     maxWidth: 920\n  //   },\n  //   cardGrid: {\n  //     paddingTop: theme.spacing(8),\n  //     paddingBottom: theme.spacing(8)\n  //   },\n  //   root: {\n  //     minWidth: 275\n  //   },\n  //   bullet: {\n  //     display: \"inline-block\",\n  //     margin: \"0 2px\",\n  //     transform: \"scale(0.8)\"\n  //   },\n  //   title: {\n  //     fontSize: 14\n  //   },\n  //   pos: {\n  //     marginBottom: 12\n  //   },\n  //   card: {\n  //     height: \"100%\",\n  //     width: \"100%\",\n  //     display: \"flex\",\n  //     flexDirection: \"column\"\n  //   },\n  //   cardGrid: {\n  //     paddingTop: theme.spacing(8),\n  //     paddingBottom: theme.spacing(8)\n  //   },\n  //   form: {\n  //     padding: \"30px\"\n  //   },\n  //   selectEmpty: {\n  //     marginTop: theme.spacing(2)\n  //   }\n});\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        house_name: \"\",\n        place: \"\",\n        area: \"\",\n        road_name: \"\",\n        village: \"\",\n        district: \"\",\n        state: \"\",\n        pin_code: \"\",\n        phone_number: \"\",\n        default: false,\n        id: \"\",\n        user: 1\n      },\n      saving: false,\n      success: false,\n      selectedPlace: \"Kolapparamb\",\n      areas: [],\n      places: []\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChangePlace = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      }); // this.fetchAreas();\n      // console.log(\"fetching area\");\n    };\n\n    this.fetchPlaces = () => {\n      this.setState({\n        loading: true\n      });\n      console.log(\"mounted\");\n      authAxios.get(placeListURL).then(res => {\n        this.setState({\n          places: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      // console.log(\"value\");\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    } // this.fetchPlaces();\n    // this.fetchAreas();\n\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving,\n      selectedPlace,\n      places,\n      areas\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      elevation: 3,\n      mt: 10,\n      mb: 10,\n      style: {\n        padding: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }), success && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    }, \"Success\"), \"Your address was saved\"), error && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }, JSON.stringify(error))), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit // success={success}\n      // error={error}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"place\",\n      name: \"place\",\n      label: \"Place Name\",\n      fullWidth: true,\n      autoComplete: \"place\",\n      onChange: this.handleChange,\n      value: formData.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"area\",\n      name: \"area\",\n      label: \"Area Name\",\n      fullWidth: true,\n      autoComplete: \"area\",\n      onChange: this.handleChange,\n      value: formData.area,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"house_name\",\n      name: \"house_name\",\n      label: \"House Name\",\n      fullWidth: true,\n      autoComplete: \"house_name\",\n      onChange: this.handleChange,\n      value: formData.house_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"road_name\",\n      name: \"road_name\",\n      label: \"Road Name\",\n      fullWidth: true,\n      autoComplete: \"road_name\",\n      onChange: this.handleChange,\n      value: formData.road_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"village\",\n      name: \"village\",\n      label: \"Village\",\n      fullWidth: true // autoComplete=\"village\"\n      ,\n      onChange: this.handleChange,\n      value: formData.village,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"district\",\n      name: \"district\",\n      label: \"District\",\n      fullWidth: true // autoComplete=\"district\"\n      ,\n      onChange: this.handleChange,\n      value: formData.district,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"state\",\n      name: \"state\",\n      label: \"State\",\n      fullWidth: true,\n      onChange: this.handleChange,\n      value: formData.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"pin_code\",\n      name: \"pin_code\",\n      label: \"Pin Code\",\n      fullWidth: true,\n      autoComplete: \"pin_code\",\n      onChange: this.handleChange,\n      value: formData.pin_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"phone_number\",\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      fullWidth: true,\n      autoComplete: \"phone_number\",\n      onChange: this.handleChange,\n      value: formData.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"best\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 28\n        }\n      }),\n      label: \"Default Address\",\n      name: \"default\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\" // disabled={saving}\n      // loading={saving}\n      // primary\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: 0,\n      addresses: [],\n      userID: null,\n      selectedAddress: null // places: []\n\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {});\n      console.log(this.state.activeItem);\n    };\n\n    this.handleAddAddress = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n      console.log(activeItem);\n\n      if (activeItem === \"addAddress\") {\n        return \"addAddress\";\n      }\n\n      return \"Shipping Address\";\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      }); // console.log(address);\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        maxwidth: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return (\n          /*#__PURE__*/\n          // <React.Fragment>\n          React.createElement(Grid, {\n            item: true,\n            key: a.id,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardContent, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }\n          }, a.default && /*#__PURE__*/React.createElement(Badge, {\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            } // badgeContent={\"Default\"}\n            // color=\"primary\"\n            ,\n            hi: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 21\n            }\n          }, a.place), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            color: \"textPrimary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 21\n            }\n          }, a.house_name, \" \", a.area, \" \", a.roa), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"body2\",\n            component: \"p\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 21\n            }\n          }, a.village, /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 23\n            }\n          }), a.pin_code)), /*#__PURE__*/React.createElement(CardActions, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Fab, {\n            color: \"primary\",\n            \"aria-label\": \"edit\",\n            size: \"small\",\n            onClick: () => this.handleSelectAddress(a),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(EditIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 23\n            }\n          })), /*#__PURE__*/React.createElement(Fab, {\n            color: \"secondary\",\n            \"aria-label\": \"edit\",\n            size: \"small\",\n            onClick: () => this.handleDeleteAddress(a.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(DeleteIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 23\n            }\n          })))))\n        );\n      })));\n    };\n\n    this.handleItemClick1 = (event, value) => {\n      this.setState({\n        activeItem: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      activeItem,\n      error,\n      loading,\n      userID,\n      addresses,\n      selectedAddress\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: classes.cardGrid,\n      maxwidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      align: \"middle\",\n      className: classes.loading,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 15\n      }\n    })), error && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 15\n      }\n    }, JSON.stringify(error)), \"This is an error alert \\u2014 \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 40\n      }\n    }, \"check it out!\")), /*#__PURE__*/React.createElement(Paper, {\n      square: true,\n      className: classes.tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      variant: \"fullWidth\",\n      indicatorColor: \"secondary\",\n      textColor: \"secondary\",\n      \"aria-label\": \"icon label tabs example\",\n      value: this.state.activeItem,\n      onChange: this.handleItemClick1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      icon: /*#__PURE__*/React.createElement(ListIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 23\n        }\n      }),\n      label: \"My Delivery Addresses \" // name=\"0\"\n      // active={activeItem}\n      // active={activeItem === \"shippingAddress\"}\n      // onClick={() => this.handleItemClick(\"shippingAddress\")}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      icon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 23\n        }\n      }),\n      label: \"Add Address\" // name=\"1\"\n      // active={activeItem}\n      // active={activeItem === \"addAddress\"}\n      // onClick={() => this.handleItemClick(\"addAddress\")}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }\n    }), activeItem === 1 ? /*#__PURE__*/React.createElement(AddressForm, {\n      formType: CREATE_FORM,\n      userID: userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 13\n      }\n    }) : this.renderAddresses(), selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n      handleCallback: this.handleCallback // activeItem={activeItem}\n      ,\n      userID: userID,\n      address: selectedAddress,\n      formType: UPDATE_FORM // places={places}\n      // callback={this.handleCallback}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null // uthenticated: state.auth.token !== null,\n\n  };\n}; // export default connect(mapStateToProps)(Profile);\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(Profile));","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Address.js"],"names":["React","connect","TextField","Container","CssBaseline","Paper","Typography","makeStyles","withStyles","CardActions","CardContent","EditIcon","DeleteSharpIcon","FormControlLabel","Radio","Tabs","Tab","AddIcon","ListIcon","Alert","AlertTitle","CircularProgress","Card","Grid","Button","IconButton","Badge","Redirect","Fab","DeleteIcon","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","placeListURL","authAxios","UPDATE_FORM","CREATE_FORM","styles","theme","AddressForm","Component","state","error","loading","formData","house_name","place","area","road_name","village","district","pin_code","phone_number","default","id","user","saving","success","selectedPlace","areas","places","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleChangePlace","fetchPlaces","console","log","get","then","res","data","catch","err","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","address_type","handleCallback","put","componentDidMount","address","render","classes","padding","JSON","stringify","Profile","addresses","selectedAddress","handleItemClick","handleAddAddress","handleFetchAddresses","handleGetActiveItem","handleDeleteAddress","addressID","delete","handleSelectAddress","handleFetchUserID","renderAddresses","map","a","vertical","horizontal","roa","handleItemClick1","event","cardGrid","display","justifyContent","tab","mapStateToProps","isAuthenticated","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Redirect } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  placeListURL\n} from \"../../constants\";\nimport { authAxios } from \"../../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\n// const useStyles = makeStyles({\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     minWidth: 275\n//   },\n//   bullet: {\n//     display: \"inline-block\",\n//     margin: \"0 2px\",\n//     transform: \"scale(0.8)\"\n//   },\n//   title: {\n//     fontSize: 14\n//   },\n//   pos: {\n//     marginBottom: 12\n//   },\n//   card: {\n//     height: \"100%\",\n//     width: \"100%\",\n//     display: \"flex\",\n//     flexDirection: \"column\"\n//   }\n//   // cardGrid: {\n//   //   paddingTop: theme.spacing(8),\n//   //   paddingBottom: theme.spacing(8)\n//   // },\n//   // paper: {\n//   //   marginTop: theme.spacing(3),\n//   //   marginBottom: theme.spacing(3),\n//   //   padding: theme.spacing(2)\n//   // }\n// }));\n\nconst styles = theme => ({\n  //   // paper: {\n  //   //   display: \"flex\",\n  //   //   flexWrap: \"wrap\",\n  //   //   \"& > *\": {\n  //   //     margin: theme.spacing(3)\n  //   //   }\n  //   // },\n  //   root: {\n  //     minWidth: 275\n  //   },\n  //   bullet: {\n  //     display: \"inline-block\",\n  //     margin: \"0 2px\",\n  //     transform: \"scale(0.8)\"\n  //   },\n  //   title: {\n  //     fontSize: 14\n  //   },\n  //   pos: {\n  //     marginBottom: 12\n  //   },\n  //   tab: {\n  //     flexGrow: 1,\n  //     maxWidth: 920\n  //   },\n  //   cardGrid: {\n  //     paddingTop: theme.spacing(8),\n  //     paddingBottom: theme.spacing(8)\n  //   },\n  //   root: {\n  //     minWidth: 275\n  //   },\n  //   bullet: {\n  //     display: \"inline-block\",\n  //     margin: \"0 2px\",\n  //     transform: \"scale(0.8)\"\n  //   },\n  //   title: {\n  //     fontSize: 14\n  //   },\n  //   pos: {\n  //     marginBottom: 12\n  //   },\n  //   card: {\n  //     height: \"100%\",\n  //     width: \"100%\",\n  //     display: \"flex\",\n  //     flexDirection: \"column\"\n  //   },\n  //   cardGrid: {\n  //     paddingTop: theme.spacing(8),\n  //     paddingBottom: theme.spacing(8)\n  //   },\n  //   form: {\n  //     padding: \"30px\"\n  //   },\n  //   selectEmpty: {\n  //     marginTop: theme.spacing(2)\n  //   }\n});\n\nclass AddressForm extends React.Component {\n  // constructor() {\n  //   super();\n  // }\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      house_name: \"\",\n      place: \"\",\n      area: \"\",\n      road_name: \"\",\n      village: \"\",\n      district: \"\",\n      state: \"\",\n      pin_code: \"\",\n      phone_number: \"\",\n      default: false,\n      id: \"\",\n      user: 1\n    },\n    saving: false,\n    success: false,\n    selectedPlace: \"Kolapparamb\",\n    areas: [],\n    places: []\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n    // this.fetchPlaces();\n    // this.fetchAreas();\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChangePlace = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n    // this.fetchAreas();\n    // console.log(\"fetching area\");\n  };\n\n  fetchPlaces = () => {\n    this.setState({ loading: true });\n    console.log(\"mounted\");\n    authAxios\n      .get(placeListURL)\n      .then(res => {\n        this.setState({ places: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  // fetchAreas = () => {\n  //   const { selectedPlace } = this.state;\n  //   const { formData } = this.state;\n  //   console.log(selectedPlace);\n  //   this.setState({ loading: true });\n  //   console.log(\"area mounted\");\n  //   authAxios\n  //     .get(areaListURL(selectedPlace))\n  //     .then(res => {\n  //       this.setState({ areas: res.data, loading: false, selectedPlace: \"\" });\n  //     })\n\n  //     .catch(err => {\n  //       this.setState({ error: err });\n  //     });\n  // };\n\n  handleSelectChange = (e, { name, value }) => {\n    // console.log(\"value\");\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving,\n      selectedPlace,\n      places,\n      areas\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        {/* <Container> */}\n        <Paper elevation={3} mt={10} mb={10} style={{ padding: \"30px\" }}>\n          <br></br>\n          <Typography variant=\"h5\" gutterBottom>\n            Address\n          </Typography>\n          <br></br>\n\n          {success && (\n            <Alert severity=\"success\">\n              <AlertTitle>Success</AlertTitle>\n              Your address was saved\n            </Alert>\n          )}\n\n          {error && (\n            <Alert severity=\"error\">\n              <AlertTitle>{JSON.stringify(error)}</AlertTitle>\n              {/* This is an error alert — <strong>check it out!</strong> */}\n            </Alert>\n          )}\n          <form\n            noValidate\n            onSubmit={this.handleSubmit}\n            // success={success}\n            // error={error}\n          >\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"place\"\n                  name=\"place\"\n                  label=\"Place Name\"\n                  fullWidth\n                  autoComplete=\"place\"\n                  onChange={this.handleChange}\n                  value={formData.place}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"area\"\n                  name=\"area\"\n                  label=\"Area Name\"\n                  fullWidth\n                  autoComplete=\"area\"\n                  onChange={this.handleChange}\n                  value={formData.area}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"house_name\"\n                  name=\"house_name\"\n                  label=\"House Name\"\n                  fullWidth\n                  autoComplete=\"house_name\"\n                  onChange={this.handleChange}\n                  value={formData.house_name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"road_name\"\n                  name=\"road_name\"\n                  label=\"Road Name\"\n                  fullWidth\n                  autoComplete=\"road_name\"\n                  onChange={this.handleChange}\n                  value={formData.road_name}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"village\"\n                  name=\"village\"\n                  label=\"Village\"\n                  fullWidth\n                  // autoComplete=\"village\"\n                  onChange={this.handleChange}\n                  value={formData.village}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"district\"\n                  name=\"district\"\n                  label=\"District\"\n                  fullWidth\n                  // autoComplete=\"district\"\n                  onChange={this.handleChange}\n                  value={formData.district}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  id=\"state\"\n                  name=\"state\"\n                  label=\"State\"\n                  fullWidth\n                  onChange={this.handleChange}\n                  value={formData.state}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"pin_code\"\n                  name=\"pin_code\"\n                  label=\"Pin Code\"\n                  fullWidth\n                  autoComplete=\"pin_code\"\n                  onChange={this.handleChange}\n                  value={formData.pin_code}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"phone_number\"\n                  name=\"phone_number\"\n                  label=\"Phone Number\"\n                  fullWidth\n                  autoComplete=\"phone_number\"\n                  onChange={this.handleChange}\n                  value={formData.phone_number}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  value=\"best\"\n                  control={<Radio />}\n                  label=\"Default Address\"\n                  name=\"default\"\n                  onChange={this.handleToggleDefault}\n                  checked={formData.default}\n                />\n              </Grid>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                // disabled={saving}\n                // loading={saving}\n                // primary\n              >\n                Submit\n              </Button>\n            </Grid>\n          </form>\n        </Paper>\n        {/* </Container> */}\n      </React.Fragment>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: 0,\n    addresses: [],\n    userID: null,\n    selectedAddress: null\n    // places: []\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {});\n    console.log(this.state.activeItem);\n  };\n\n  // fetchPlaces = () => {\n  //   this.setState({ loading: true });\n  //   console.log(\"mounted\");\n  //   authAxios\n  //     .get(placeListURL)\n  //     .then(res => {\n  //       this.setState({ places: res.data, loading: false });\n  //     })\n  //     .catch(err => {\n  //       this.setState({ error: err });\n  //     });\n  // };\n\n  handleAddAddress = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    console.log(activeItem);\n    if (activeItem === \"addAddress\") {\n      return \"addAddress\";\n    }\n    return \"Shipping Address\";\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n    // console.log(address);\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n  };\n\n  renderAddresses = () => {\n    const { activeItem, addresses, selectedAddress, userID } = this.state;\n    return (\n      <div>\n        <Grid container spacing={1} maxwidth=\"md\">\n          {addresses.map(a => {\n            return (\n              // <React.Fragment>\n              <Grid item key={a.id} xs={12} sm={6} md={4}>\n                <Card>\n                  <CardContent>\n                    {a.default && (\n                      <Badge\n                        anchorOrigin={{\n                          vertical: \"top\",\n                          horizontal: \"right\"\n                        }}\n                        // badgeContent={\"Default\"}\n                        // color=\"primary\"\n                        hi\n                      ></Badge>\n                    )}\n\n                    <Typography variant=\"h5\" component=\"h2\">\n                      {a.place}\n                    </Typography>\n                    <br />\n                    <Typography color=\"textPrimary\">\n                      {a.house_name} {a.area} {a.roa}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                      {a.village}\n                      <br />\n                      {a.pin_code}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    {/* <IconButton onClick={() => this.handleSelectAddress(a)}>\n                      <EditIcon />\n                    </IconButton> */}\n                    <Fab\n                      color=\"primary\"\n                      aria-label=\"edit\"\n                      size=\"small\"\n                      onClick={() => this.handleSelectAddress(a)}\n                    >\n                      <EditIcon />\n                    </Fab>\n                    <Fab\n                      color=\"secondary\"\n                      aria-label=\"edit\"\n                      size=\"small\"\n                      onClick={() => this.handleDeleteAddress(a.id)}\n                    >\n                      <DeleteIcon />\n                    </Fab>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </div>\n    );\n  };\n\n  handleItemClick1 = (event, value) => {\n    this.setState({ activeItem: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      activeItem,\n      error,\n      loading,\n      userID,\n      addresses,\n      selectedAddress\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Container className={classes.cardGrid} maxwidth=\"md\">\n          {loading && (\n            <div\n              align=\"middle\"\n              className={classes.loading}\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <CircularProgress />\n            </div>\n          )}\n          {error && (\n            <Alert severity=\"error\">\n              <AlertTitle>{JSON.stringify(error)}</AlertTitle>\n              This is an error alert — <strong>check it out!</strong>\n            </Alert>\n          )}\n          <Paper square className={classes.tab}>\n            <Tabs\n              variant=\"fullWidth\"\n              indicatorColor=\"secondary\"\n              textColor=\"secondary\"\n              aria-label=\"icon label tabs example\"\n              value={this.state.activeItem}\n              onChange={this.handleItemClick1}\n            >\n              <Tab\n                icon={<ListIcon />}\n                label=\"My Delivery Addresses \"\n                // name=\"0\"\n                // active={activeItem}\n                // active={activeItem === \"shippingAddress\"}\n                // onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n              <Tab\n                icon={<AddIcon />}\n                label=\"Add Address\"\n                // name=\"1\"\n                // active={activeItem}\n                // active={activeItem === \"addAddress\"}\n                // onClick={() => this.handleItemClick(\"addAddress\")}\n              />\n            </Tabs>\n          </Paper>\n          <br></br>\n          {activeItem === 1 ? (\n            <AddressForm formType={CREATE_FORM} userID={userID} />\n          ) : (\n            this.renderAddresses()\n          )}\n          {selectedAddress && (\n            <AddressForm\n              handleCallback={this.handleCallback}\n              // activeItem={activeItem}\n              userID={userID}\n              address={selectedAddress}\n              formType={UPDATE_FORM}\n              // places={places}\n              // callback={this.handleCallback}\n            />\n          )}\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n    // uthenticated: state.auth.token !== null,\n  };\n};\n\n// export default connect(mapStateToProps)(Profile);\n\nexport default connect(mapStateToProps)(withStyles(styles)(Profile));\n"]},"metadata":{},"sourceType":"module"}