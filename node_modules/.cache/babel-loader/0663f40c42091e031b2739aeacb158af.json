{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/ProductList/ProductList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { addToCartURL, ShopProductListURL, orderItemDeleteURL, orderItemUpdateQuantityURL } from \"../../constants\";\nimport { fetchCart } from \"../../store/actions/cart\";\nimport { authAxios } from \"../../utils\";\nconst styles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n}); // const classes = styles();\n\nclass ProductList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      data: [],\n      formData: {}\n    };\n\n    this.handleToggleForm = () => {\n      const {\n        formVisible\n      } = this.state;\n      this.setState({\n        formVisible: !formVisible\n      });\n    };\n\n    this.handleFormatData = formData => {\n      // convert {colour: 1, size: 2} to [1,2] - they're all variations\n      return Object.keys(formData).map(key => {\n        return formData[key];\n      });\n    };\n\n    this.handleAddToCart = (slug, shop, place) => {\n      this.setState({\n        loading: true\n      });\n      const {\n        formData\n      } = this.state;\n      const variations = this.handleFormatData(formData);\n      authAxios.post(addToCartURL, {\n        place,\n        shop,\n        slug,\n        variations\n      }).then(res => {\n        this.props.refreshCart();\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.renderVariations = orderItem => {\n      let text = \"\";\n      orderItem.item_variations.forEach(iv => {\n        text += `${iv.variation.name}: ${iv.value}, `;\n      });\n      return text;\n    };\n\n    this.handleRemoveQuantityFromCart = slug => {\n      authAxios.post(orderItemUpdateQuantityURL, {\n        slug\n      }).then(res => {\n        this.handleFetchOrder();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleRemoveItem = itemID => {\n      authAxios.delete(orderItemDeleteURL(itemID)).then(res => {\n        this.handleFetchOrder();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormData = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormData\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.setState({\n      loading: true\n    });\n    axios.get(ShopProductListURL(params.shopID)).then(res => {\n      this.setState({\n        data: res.data,\n        loading: false\n      });\n    }).catch(err => {\n      this.setState({\n        error: err,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      error,\n      formData,\n      formVisible,\n      loading\n    } = this.state;\n    const item = data;\n    return (\n      /*#__PURE__*/\n      //   <Card className={classes.root}>\n      React.createElement(Card, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardActionArea, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardMedia, {\n        className: classes.media,\n        image: \"/static/images/cards/contemplative-reptile.jpg\",\n        title: \"Contemplative Reptile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, \"Lizard\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"))), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, \"Share\"), /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, \"Learn More\")))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n}; // export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopProductList);\n// export default connect(\n\n\nexport default withStyles(styles)(ProductList);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/ProductList/ProductList.js"],"names":["React","connect","axios","makeStyles","createMuiTheme","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","withStyles","addToCartURL","ShopProductListURL","orderItemDeleteURL","orderItemUpdateQuantityURL","fetchCart","authAxios","styles","root","maxWidth","media","height","ProductList","Component","state","loading","error","data","formData","handleToggleForm","formVisible","setState","handleFormatData","Object","keys","map","key","handleAddToCart","slug","shop","place","variations","post","then","res","props","refreshCart","catch","err","renderVariations","orderItem","text","item_variations","forEach","iv","variation","name","value","handleRemoveQuantityFromCart","handleFetchOrder","handleRemoveItem","itemID","delete","handleChange","e","updatedFormData","componentDidMount","match","params","get","shopID","render","item","classes","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/styles\";\n\nimport {\n  addToCartURL,\n  ShopProductListURL,\n  orderItemDeleteURL,\n  orderItemUpdateQuantityURL\n} from \"../../constants\";\nimport { fetchCart } from \"../../store/actions/cart\";\nimport { authAxios } from \"../../utils\";\n\nconst styles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\n// const classes = styles();\n\nclass ProductList extends React.Component {\n  state = {\n    loading: false,\n    error: null,\n    data: [],\n    formData: {}\n  };\n\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    this.setState({ loading: true });\n    axios\n      .get(ShopProductListURL(params.shopID))\n      .then(res => {\n        this.setState({ data: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  }\n\n  handleToggleForm = () => {\n    const { formVisible } = this.state;\n    this.setState({\n      formVisible: !formVisible\n    });\n  };\n\n  handleFormatData = formData => {\n    // convert {colour: 1, size: 2} to [1,2] - they're all variations\n    return Object.keys(formData).map(key => {\n      return formData[key];\n    });\n  };\n\n  handleAddToCart = (slug, shop, place) => {\n    this.setState({ loading: true });\n    const { formData } = this.state;\n    const variations = this.handleFormatData(formData);\n    authAxios\n      .post(addToCartURL, { place, shop, slug, variations })\n      .then(res => {\n        this.props.refreshCart();\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  renderVariations = orderItem => {\n    let text = \"\";\n    orderItem.item_variations.forEach(iv => {\n      text += `${iv.variation.name}: ${iv.value}, `;\n    });\n    return text;\n  };\n\n  handleRemoveQuantityFromCart = slug => {\n    authAxios\n      .post(orderItemUpdateQuantityURL, { slug })\n      .then(res => {\n        this.handleFetchOrder();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleRemoveItem = itemID => {\n    authAxios\n      .delete(orderItemDeleteURL(itemID))\n      .then(res => {\n        this.handleFetchOrder();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormData = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({ formData: updatedFormData });\n  };\n  render() {\n    const { data, error, formData, formVisible, loading } = this.state;\n    const item = data;\n    return (\n      //   <Card className={classes.root}>\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image=\"/static/images/cards/contemplative-reptile.jpg\"\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Lizard\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over\n              6,000 species, ranging across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopProductList);\n\n// export default connect(\nexport default withStyles(styles)(ProductList);\n"]},"metadata":{},"sourceType":"module"}