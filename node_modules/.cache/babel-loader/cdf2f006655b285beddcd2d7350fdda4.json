{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/OrderSummary/OrderSummary.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // import { Button, Container, Header, Select } from \"semantic-ui-react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { authAxios } from \"../../utils\";\nimport { checkoutURL, orderSummaryURL, addressListURL } from \"../../constants\";\nimport { fetchCart } from \"../../store/actions/cart\";\nimport CheckoutItem from \"./checkout-item\";\nimport { CheckoutPageContainer, CheckoutHeaderContainer, HeaderBlockContainer, TotalContainer, WarningContainer } from \"./checkout.styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 2,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: \"100\"\n  },\n  tableHead: {\n    background: \"#3f51b5\",\n    color: \"white\",\n    fontWeigth: \"bold\",\n    fontSize: \"20pt\"\n  },\n  tablecell: {\n    fontSize: \"12pt\"\n  }\n}));\n\nconst OrderPreview = props => {\n  const {\n    data\n  } = props;\n  const classes = useStyles(); // console.log(props);\n\n  return (\n    /*#__PURE__*/\n    // <CheckoutPageContainer>\n    //   <CheckoutHeaderContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Product</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Quantity</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Price</span>\n    //     </HeaderBlockContainer>\n    //   </CheckoutHeaderContainer>\n    //   {data && (\n    //     <React.Fragment>\n    //       {data.order_items.map(order_item => (\n    //         <CheckoutItem key={order_item.id} order_item={order_item} />\n    //       ))}\n    //       <br />\n    //       <Typography variant=\"h6\" component=\"h2\">\n    //         TOTAL: {data.total}\n    //       </Typography>\n    //     </React.Fragment>\n    //   )}\n    //   <br></br>\n    //   <Typography variant=\"h6\" component=\"h2\">\n    //     *For payment related queries, please contact the shop.\n    //   </Typography>\n    // </CheckoutPageContainer>\n    // <Grid>\n    //   <div className={classes.TopPadding}>\n    //     <TableContainer component={Paper}>\n    //       <Table\n    //         className={classes.table}\n    //         aria-label=\"customized table\"\n    //         style={{ width: 500 }}\n    //       >\n    //         <TableHead>\n    //           <TableRow className={classes.tableHead}>\n    //             <TableCell align=\"left\">Item</TableCell>\n    //             <TableCell align=\"left\">Quantity</TableCell>\n    //             <TableCell align=\"left\">Price</TableCell>\n    //           </TableRow>\n    //         </TableHead>\n    //         <TableBody>\n    //           {data && (\n    //             <React.Fragment>\n    //               {data.order_items.map(order_item => {\n    //                 return (\n    //                   <TableRow key={order_item.id}>\n    //                     <TableCell component=\"th\" scope=\"row\">\n    //                       {order_item.item.title}\n    //                     </TableCell>\n    //                     <TableCell component=\"th\" scope=\"row\">\n    //                       {order_item.quantity}\n    //                     </TableCell>\n    //                     <TableCell align=\"left\">\n    //                       {order_item.final_price}\n    //                     </TableCell>\n    //                   </TableRow>\n    //                 );\n    //               })}\n    //               <TableRow\n    //                 style={{\n    //                   backgroundColor: \"#9fa8da\",\n    //                   color: \"white\",\n    //                   fontSize: 20\n    //                 }}\n    //               >\n    //                 {/* <TableCell rowSpan={2} /> */}\n    //                 <TableCell colSpan={2}>Total</TableCell>\n    //                 <TableCell align=\"left\">{data.total}</TableCell>\n    //               </TableRow>\n    //             </React.Fragment>\n    //           )}\n    //         </TableBody>\n    //       </Table>\n    //     </TableContainer>\n    //   </div>\n    // </Grid>\n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }, data && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonBase, {\n      className: classes.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.img,\n      alt: \"complex\",\n      src: \"/static/images/grid/complex.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Standard license\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Full resolution 1920x1080 \\u2022 JPEG\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Remove\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, \"$19.00\")))))))\n  );\n};\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      loading: false,\n      error: null,\n      success: false,\n      shippingAddresses: [],\n      billingAddresses: [],\n      selectedShippingAddress: null,\n      shop: \"\",\n      place: \"\",\n      mode_of_payment: \"\"\n    };\n\n    this.handleFetchShippingAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(addressListURL(\"S\")).then(res => {\n        this.setState({\n          shippingAddresses: res.data.map(a => {\n            return {\n              key: a.id,\n              text: `${a.place}, ${a.area}, ${a.road_name}`,\n              value: a.id\n            };\n          }),\n          selectedShippingAddress: this.handleGetDefaultAddress(res.data),\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleGetDefaultAddress = addresses => {\n      const filteredAddresses = addresses.filter(el => el.default === true);\n\n      if (filteredAddresses.length > 0) {\n        return filteredAddresses[0].id;\n      }\n\n      return \"\";\n    };\n\n    this.handleFetchOrder = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(orderSummaryURL).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        if (err.response.status === 404) {\n          this.props.history.push(\"/orders\");\n        } else {\n          this.setState({\n            error: err,\n            loading: false\n          });\n        }\n      });\n    };\n\n    this.submit = ev => {\n      ev.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        selectedShippingAddress\n      } = this.state;\n      authAxios.post(checkoutURL, {\n        selectedShippingAddress\n      }).then(res => {\n        this.setState({\n          loading: false,\n          success: true\n        });\n        this.redirectToOrders();\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchOrder();\n    this.handleFetchShippingAddresses();\n  }\n\n  redirectToOrders() {\n    setTimeout(this.props.history.push(\"/orders\"), 10000);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      refreshCart\n    } = this.props;\n    const {\n      data,\n      error,\n      loading,\n      success,\n      shippingAddresses,\n      selectedShippingAddress\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 7\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    })), error && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, JSON.stringify(error))), /*#__PURE__*/React.createElement(OrderPreview, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, \"Select Address\"), shippingAddresses.length > 0 ? /*#__PURE__*/React.createElement(Select, {\n      name: \"selectedShippingAddress\",\n      value: selectedShippingAddress,\n      clearable: true,\n      options: shippingAddresses,\n      selection: true,\n      onChange: event => this.handleSelectChangeAddress(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, \"You need to \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, \"add an address\")), shippingAddresses.length < 1 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    }, \"You need to add an addresse to complete your purchase\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, \"Confirm Order\"), success && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, \"Your Order is successful\")), /*#__PURE__*/React.createElement(Button, {\n      loading: loading,\n      disabled: loading,\n      primary: true,\n      onClick: this.submit,\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CheckoutForm); // export default CheckoutForm;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/OrderSummary/OrderSummary.js"],"names":["React","Component","Link","connect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","makeStyles","CircularProgress","Container","Alert","AlertTitle","Typography","AddIcon","Button","Select","Grid","ButtonBase","authAxios","checkoutURL","orderSummaryURL","addressListURL","fetchCart","CheckoutItem","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","useStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","tableHead","background","color","fontWeigth","fontSize","tablecell","OrderPreview","props","data","classes","paper","image","img","cursor","CheckoutForm","state","loading","error","success","shippingAddresses","billingAddresses","selectedShippingAddress","shop","place","mode_of_payment","handleFetchShippingAddresses","setState","get","then","res","map","a","key","id","text","area","road_name","value","handleGetDefaultAddress","catch","err","addresses","filteredAddresses","filter","el","default","length","handleFetchOrder","response","status","history","push","submit","ev","preventDefault","post","redirectToOrders","componentDidMount","setTimeout","render","refreshCart","JSON","stringify","event","handleSelectChangeAddress","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import { Button, Container, Header, Select } from \"semantic-ui-react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\n\nimport { authAxios } from \"../../utils\";\nimport { checkoutURL, orderSummaryURL, addressListURL } from \"../../constants\";\nimport { fetchCart } from \"../../store/actions/cart\";\nimport CheckoutItem from \"./checkout-item\";\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from \"./checkout.styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 2,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: \"100\"\n  },\n  tableHead: {\n    background: \"#3f51b5\",\n    color: \"white\",\n    fontWeigth: \"bold\",\n    fontSize: \"20pt\"\n  },\n  tablecell: {\n    fontSize: \"12pt\"\n  }\n}));\n\nconst OrderPreview = props => {\n  const { data } = props;\n  const classes = useStyles();\n  // console.log(props);\n\n  return (\n    // <CheckoutPageContainer>\n    //   <CheckoutHeaderContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Product</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Quantity</span>\n    //     </HeaderBlockContainer>\n    //     <HeaderBlockContainer>\n    //       <span>Price</span>\n    //     </HeaderBlockContainer>\n    //   </CheckoutHeaderContainer>\n    //   {data && (\n    //     <React.Fragment>\n    //       {data.order_items.map(order_item => (\n    //         <CheckoutItem key={order_item.id} order_item={order_item} />\n    //       ))}\n    //       <br />\n    //       <Typography variant=\"h6\" component=\"h2\">\n    //         TOTAL: {data.total}\n    //       </Typography>\n    //     </React.Fragment>\n    //   )}\n    //   <br></br>\n    //   <Typography variant=\"h6\" component=\"h2\">\n    //     *For payment related queries, please contact the shop.\n    //   </Typography>\n    // </CheckoutPageContainer>\n\n    // <Grid>\n    //   <div className={classes.TopPadding}>\n    //     <TableContainer component={Paper}>\n    //       <Table\n    //         className={classes.table}\n    //         aria-label=\"customized table\"\n    //         style={{ width: 500 }}\n    //       >\n    //         <TableHead>\n    //           <TableRow className={classes.tableHead}>\n    //             <TableCell align=\"left\">Item</TableCell>\n    //             <TableCell align=\"left\">Quantity</TableCell>\n    //             <TableCell align=\"left\">Price</TableCell>\n    //           </TableRow>\n    //         </TableHead>\n    //         <TableBody>\n    //           {data && (\n    //             <React.Fragment>\n    //               {data.order_items.map(order_item => {\n    //                 return (\n    //                   <TableRow key={order_item.id}>\n    //                     <TableCell component=\"th\" scope=\"row\">\n    //                       {order_item.item.title}\n    //                     </TableCell>\n    //                     <TableCell component=\"th\" scope=\"row\">\n    //                       {order_item.quantity}\n    //                     </TableCell>\n    //                     <TableCell align=\"left\">\n    //                       {order_item.final_price}\n    //                     </TableCell>\n    //                   </TableRow>\n    //                 );\n    //               })}\n    //               <TableRow\n    //                 style={{\n    //                   backgroundColor: \"#9fa8da\",\n    //                   color: \"white\",\n    //                   fontSize: 20\n    //                 }}\n    //               >\n    //                 {/* <TableCell rowSpan={2} /> */}\n    //                 <TableCell colSpan={2}>Total</TableCell>\n    //                 <TableCell align=\"left\">{data.total}</TableCell>\n    //               </TableRow>\n    //             </React.Fragment>\n    //           )}\n    //         </TableBody>\n    //       </Table>\n    //     </TableContainer>\n    //   </div>\n    // </Grid>\n    <React.Fragment>\n      {data && (\n        <React.Fragment>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item>\n                <ButtonBase className={classes.image}>\n                  <img\n                    className={classes.img}\n                    alt=\"complex\"\n                    src=\"/static/images/grid/complex.jpg\"\n                  />\n                </ButtonBase>\n              </Grid>\n              <Grid item xs={12} sm container>\n                <Grid item xs container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <Typography gutterBottom variant=\"subtitle1\">\n                      Standard license\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      Full resolution 1920x1080 • JPEG\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"body2\" style={{ cursor: \"pointer\" }}>\n                      Remove\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"subtitle1\">$19.00</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nclass CheckoutForm extends Component {\n  state = {\n    data: null,\n    loading: false,\n    error: null,\n    success: false,\n    shippingAddresses: [],\n    billingAddresses: [],\n    selectedShippingAddress: null,\n    shop: \"\",\n    place: \"\",\n    mode_of_payment: \"\"\n  };\n\n  componentDidMount() {\n    this.handleFetchOrder();\n    this.handleFetchShippingAddresses();\n  }\n\n  handleFetchShippingAddresses = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(addressListURL(\"S\"))\n      .then(res => {\n        this.setState({\n          shippingAddresses: res.data.map(a => {\n            return {\n              key: a.id,\n              text: `${a.place}, ${a.area}, ${a.road_name}`,\n              value: a.id\n            };\n          }),\n          selectedShippingAddress: this.handleGetDefaultAddress(res.data),\n\n          loading: false\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleGetDefaultAddress = addresses => {\n    const filteredAddresses = addresses.filter(el => el.default === true);\n    if (filteredAddresses.length > 0) {\n      return filteredAddresses[0].id;\n    }\n    return \"\";\n  };\n\n  handleFetchOrder = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(orderSummaryURL)\n      .then(res => {\n        this.setState({ data: res.data, loading: false });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.props.history.push(\"/orders\");\n        } else {\n          this.setState({ error: err, loading: false });\n        }\n      });\n  };\n\n  submit = ev => {\n    ev.preventDefault();\n    this.setState({ loading: true });\n    const { selectedShippingAddress } = this.state;\n    authAxios\n      .post(checkoutURL, {\n        selectedShippingAddress\n      })\n      .then(res => {\n        this.setState({ loading: false, success: true });\n        this.redirectToOrders();\n      })\n      .catch(err => {\n        this.setState({ loading: false, error: err });\n      });\n  };\n\n  redirectToOrders() {\n    setTimeout(this.props.history.push(\"/orders\"), 10000);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { refreshCart } = this.props;\n    const {\n      data,\n      error,\n      loading,\n      success,\n      shippingAddresses,\n      selectedShippingAddress\n    } = this.state;\n\n    return (\n      <div>\n        {loading && (\n          <div>\n            <CircularProgress color=\"secondary\" />\n          </div>\n        )}\n        {error && (\n          <Alert severity=\"error\">\n            <AlertTitle>{JSON.stringify(error)}</AlertTitle>\n          </Alert>\n        )}\n        <OrderPreview data={data} />\n        <Typography variant=\"h6\" component=\"h2\">\n          Select Address\n        </Typography>\n        {shippingAddresses.length > 0 ? (\n          <Select\n            name=\"selectedShippingAddress\"\n            value={selectedShippingAddress}\n            clearable\n            options={shippingAddresses}\n            selection\n            onChange={event =>\n              this.handleSelectChangeAddress(event.target.value)\n            }\n          />\n        ) : (\n          <p>\n            You need to <Link to=\"/profile\">add an address</Link>\n          </p>\n        )}\n\n        {shippingAddresses.length < 1 ? (\n          <p>You need to add an addresse to complete your purchase</p>\n        ) : (\n          <React.Fragment>\n            {/* <Header>Confirm Order?</Header> */}\n            {/* <h2>Confirm Order</h2> */}\n            <Typography variant=\"h6\" component=\"h2\">\n              Confirm Order\n            </Typography>\n\n            {success && (\n              <Alert severity=\"success\">\n                <AlertTitle>{\"Your Order is successful\"}</AlertTitle>\n                {/* This is an error alert — <strong>check it out!</strong> */}\n              </Alert>\n            )}\n            <Button\n              loading={loading}\n              disabled={loading}\n              primary\n              onClick={this.submit}\n              style={{ marginTop: \"10px\" }}\n            >\n              Submit\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutForm);\n\n// export default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}