{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Test2.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, paymentListURL, orderListURL } from \"../constants\";\nimport { authAxios } from \"../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1,\n        zip: \"\"\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: \"S\" // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: \"S\" // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"house_name\",\n      placeholder: \"house_name\",\n      onChange: this.handleChange,\n      value: formData.house_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"place\",\n      placeholder: \"Place\",\n      onChange: this.handleChange,\n      value: formData.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"area\",\n      placeholder: \"area\",\n      onChange: this.handleChange,\n      value: formData.area,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"road_name\",\n      placeholder: \"road_name\",\n      onChange: this.handleChange,\n      value: formData.road_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"district\",\n      placeholder: \"district\",\n      onChange: this.handleChange,\n      value: formData.district,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"state\",\n      placeholder: \"state\",\n      onChange: this.handleChange,\n      value: formData.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"pin_code\",\n      placeholder: \"Pin code\",\n      onChange: this.handleChange,\n      value: formData.pin_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"phone_num\",\n      placeholder: \"Phone Number\",\n      onChange: this.handleChange,\n      value: formData.phone_num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"shippingAddress\",\n      addresses: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billing Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      } else if (activeItem === \"addAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        maxWidth: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          key: a.id,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: classes.card,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(CardContent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: \"best\",\n          control: /*#__PURE__*/React.createElement(Radio, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 34\n            }\n          }),\n          label: \"Default Address\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 23\n          }\n        }, a.place), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.pos,\n          color: \"textPrimary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 23\n          }\n        }, a.house_name, \" \", a.area, \" \", a.roa), /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 23\n          }\n        }, a.village, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }\n        }), a.pin_code)), /*#__PURE__*/React.createElement(CardActions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(EditIcon, {\n          onClick: props.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(DeleteSharpIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 23\n          }\n        })))));\n      })));\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props; // if (!isAuthenticated) {\n    //   return <Redirect to=\"/login\" />;\n    // }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      align: \"middle\",\n      className: classes.loading,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    })), error && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }, JSON.stringify(error)), \"This is an error alert \\u2014 \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 40\n      }\n    }, \"check it out!\")), /*#__PURE__*/React.createElement(Paper, {\n      square: true,\n      className: classes.tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      variant: \"fullWidth\",\n      indicatorColor: \"secondary\",\n      textColor: \"secondary\",\n      \"aria-label\": \"icon label tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      icon: /*#__PURE__*/React.createElement(ListIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 23\n        }\n      }),\n      label: \"My Delivery Addresses \",\n      name: \"Your Delivery Addresses\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      icon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 23\n        }\n      }),\n      label: \"Add Address\",\n      name: \"addAddress\",\n      active: activeItem === \"addAddress\",\n      onClick: () => this.handleItemClick(\"addAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }\n    }), activeItem === \"addAddress\" ? /*#__PURE__*/React.createElement(AddressForm, {\n      activeItem: activeItem,\n      formType: CREATE_FORM,\n      userID: userID,\n      callback: this.handleCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(RenderAddresses, {\n      activeItem: activeItem,\n      addresses: addresses,\n      selectedAddress: selectedAddress,\n      userID: userID,\n      handleSelectAddress: this.handleSelectAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }\n    }), activeItem === \"paymentHistory\" ? null : this.renderAddresses()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Test2.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","paymentListURL","orderListURL","authAxios","UPDATE_FORM","CREATE_FORM","AddressForm","Component","state","error","loading","formData","address_type","apartment_address","country","default","id","street_address","user","zip","saving","success","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","then","res","callback","catch","err","put","componentDidMount","address","render","countries","house_name","place","area","road_name","district","pin_code","phone_num","JSON","stringify","Profile","addresses","selectedAddress","handleItemClick","handleFetchAddresses","handleGetActiveItem","handleFormatCountries","keys","Object","map","k","key","text","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","get","data","handleFetchCountries","renderAddresses","a","classes","card","pos","roa","village","isAuthenticated","cardGrid","display","justifyContent","tab","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Message,\n  Segment,\n  Select,\n  Table\n} from \"semantic-ui-react\";\nimport {\n  countryListURL,\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  paymentListURL,\n  orderListURL\n} from \"../constants\";\nimport { authAxios } from \"../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      address_type: \"\",\n      apartment_address: \"\",\n      country: \"\",\n      default: false,\n      id: \"\",\n      street_address: \"\",\n      user: 1,\n      zip: \"\"\n    },\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSelectChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n        // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n        // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { countries } = this.props;\n    const { error, formData, success, saving } = this.state;\n    return (\n      <Form\n        onSubmit={this.handleSubmit}\n        success={success}\n        error={error}\n        noValidate\n      >\n        <Form.Input\n          required\n          name=\"house_name\"\n          placeholder=\"house_name\"\n          onChange={this.handleChange}\n          value={formData.house_name}\n        />\n        <Form.Input\n          required\n          name=\"place\"\n          placeholder=\"Place\"\n          onChange={this.handleChange}\n          value={formData.place}\n        />\n        <Form.Input\n          required\n          name=\"area\"\n          placeholder=\"area\"\n          onChange={this.handleChange}\n          value={formData.area}\n        />\n        <Form.Input\n          required\n          name=\"road_name\"\n          placeholder=\"road_name\"\n          onChange={this.handleChange}\n          value={formData.road_name}\n        />\n        <Form.Input\n          required\n          name=\"district\"\n          placeholder=\"district\"\n          onChange={this.handleChange}\n          value={formData.district}\n        />\n        <Form.Input\n          required\n          name=\"state\"\n          placeholder=\"state\"\n          onChange={this.handleChange}\n          value={formData.state}\n        />\n        <Form.Input\n          required\n          name=\"pin_code\"\n          placeholder=\"Pin code\"\n          onChange={this.handleChange}\n          value={formData.pin_code}\n        />\n        <Form.Input\n          required\n          name=\"phone_num\"\n          placeholder=\"Phone Number\"\n          onChange={this.handleChange}\n          value={formData.phone_num}\n        />\n        <Form.Checkbox\n          name=\"default\"\n          label=\"Make this the default address?\"\n          onChange={this.handleToggleDefault}\n          checked={formData.default}\n        />\n\n        {success && (\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\n        )}\n        {error && (\n          <Message\n            error\n            header=\"There was an error\"\n            content={JSON.stringify(error)}\n          />\n        )}\n        <Form.Button disabled={saving} loading={saving} primary>\n          Save\n        </Form.Button>\n      </Form>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: \"shippingAddress\",\n    addresses: [],\n    userID: null,\n    selectedAddress: null\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    if (activeItem === \"billingAddress\") {\n      return \"Billing Address\";\n    } else if (activeItem === \"shippingAddress\") {\n      return \"Shipping Address\";\n    } else if (activeItem === \"addAddress\") {\n      return \"Shipping Address\";\n    }\n    return \"Payment History\";\n  };\n\n  handleFormatCountries = countries => {\n    const keys = Object.keys(countries);\n    return keys.map(k => {\n      return {\n        key: k,\n        text: countries[k],\n        value: k\n      };\n    });\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchCountries = () => {\n    authAxios\n      .get(countryListURL)\n      .then(res => {\n        this.setState({ countries: this.handleFormatCountries(res.data) });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n    this.setState({ selectedAddress: null });\n  };\n\n  renderAddresses = () => {\n    const {\n      activeItem,\n      addresses,\n      countries,\n      selectedAddress,\n      userID\n    } = this.state;\n    return (\n      <div>\n        <Grid container spacing={1} maxWidth=\"md\">\n          {addresses.map(a => {\n            return (\n              <React.Fragment>\n                <Grid item key={a.id} xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardContent>\n                      <FormControlLabel\n                        value=\"best\"\n                        control={<Radio />}\n                        label=\"Default Address\"\n                      />\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {a.place}\n                      </Typography>\n                      <br />\n                      <Typography className={classes.pos} color=\"textPrimary\">\n                        {a.house_name} {a.area} {a.roa}\n                      </Typography>\n                      <Typography variant=\"body2\" component=\"p\">\n                        {a.village}\n                        <br />\n                        {a.pin_code}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <EditIcon onClick={props.handleSelectAddress(a)} />\n                      <DeleteSharpIcon />\n                      {/* <Button size=\"small\">Learn More</Button> */}\n                    </CardActions>\n                  </Card>\n                </Grid>\n              </React.Fragment>\n            );\n          })}\n        </Grid>\n      </div>\n    );\n  };\n\n  render() {\n    const { activeItem, error, loading } = this.state;\n    const { isAuthenticated } = this.props;\n    // if (!isAuthenticated) {\n    //   return <Redirect to=\"/login\" />;\n    // }\n    return (\n      <React.Fragment>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {loading && (\n            <div\n              align=\"middle\"\n              className={classes.loading}\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <CircularProgress />\n            </div>\n          )}\n          {error && (\n            <Alert severity=\"error\">\n              <AlertTitle>{JSON.stringify(error)}</AlertTitle>\n              This is an error alert — <strong>check it out!</strong>\n            </Alert>\n          )}\n          <Paper square className={classes.tab}>\n            <Tabs\n              variant=\"fullWidth\"\n              indicatorColor=\"secondary\"\n              textColor=\"secondary\"\n              aria-label=\"icon label tabs example\"\n            >\n              <Tab\n                icon={<ListIcon />}\n                label=\"My Delivery Addresses \"\n                name=\"Your Delivery Addresses\"\n                active={activeItem === \"shippingAddress\"}\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n              <Tab\n                icon={<AddIcon />}\n                label=\"Add Address\"\n                name=\"addAddress\"\n                active={activeItem === \"addAddress\"}\n                onClick={() => this.handleItemClick(\"addAddress\")}\n              />\n            </Tabs>\n          </Paper>\n          <br></br>\n          {activeItem === \"addAddress\" ? (\n            <AddressForm\n              activeItem={activeItem}\n              formType={CREATE_FORM}\n              userID={userID}\n              callback={this.handleCallback}\n            />\n          ) : (\n            <RenderAddresses\n              activeItem={activeItem}\n              addresses={addresses}\n              selectedAddress={selectedAddress}\n              userID={userID}\n              handleSelectAddress={this.handleSelectAddress}\n            />\n          )}\n          {activeItem === \"paymentHistory\" ? null : this.renderAddresses()}\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}