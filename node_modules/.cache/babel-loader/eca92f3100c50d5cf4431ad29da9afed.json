{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/containers/Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, paymentListURL } from \"../constants\";\nimport { authAxios } from \"../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\"; // class PaymentHistory extends React.Component {\n//   state = {\n//     payments: []\n//   };\n// componentDidMount() {\n//   this.handleFetchPayments();\n// }\n// handleFetchPayments = () => {\n//   this.setState({ loading: true });\n//   authAxios\n//     .get(paymentListURL)\n//     .then(res => {\n//       this.setState({\n//         loading: false,\n//         payments: res.data\n//       });\n//     })\n//     .catch(err => {\n//       this.setState({ error: err, loading: false });\n//     });\n// };\n// render() {\n//   const { payments } = this.state;\n//   return (\n//     <Table celled>\n//       <Table.Header>\n//           <Table.Row>\n//             <Table.HeaderCell>ID</Table.HeaderCell>\n//             <Table.HeaderCell>Amount</Table.HeaderCell>\n//             <Table.HeaderCell>Date</Table.HeaderCell>\n//           </Table.Row>\n//         </Table.Header>\n//         <Table.Body>\n//           {payments.map(p => {\n//             return (\n//               <Table.Row key={p.id}>\n//                 <Table.Cell>{p.id}</Table.Cell>\n//                 <Table.Cell>${p.amount}</Table.Cell>\n//                 <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n//               </Table.Row>\n//             );\n//           })}\n//         </Table.Body>\n//       </Table>\n//     );\n//   }\n// }\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        palce: \"\",\n        area: \"\",\n        road: \"\",\n        state: \"\",\n        pin_code: \"\",\n        default: false,\n        id: \"\",\n        user: 1\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: \"S\" // address_type: activeItem === \"billingAddress\" ? \"S\" : \"S\"\n\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"S\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    // const { countries } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"place\",\n      placeholder: \"Place Name\",\n      onChange: this.handleChange,\n      value: formData.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"area\",\n      placeholder: \"Area Name\",\n      onChange: this.handleChange,\n      value: formData.area,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"house_name\",\n      placeholder: \"House Name\",\n      onChange: this.handleChange,\n      value: formData.house_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"road\",\n      placeholder: \"Road\",\n      onChange: this.handleChange,\n      value: formData.road,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"village\",\n      placeholder: \"Village\",\n      onChange: this.handleChange,\n      value: formData.village,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"pin_code\",\n      placeholder: \"Pin Code\",\n      onChange: this.handleChange,\n      value: formData.pin_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"state\",\n      placeholder: \"state\",\n      onChange: this.handleChange,\n      value: formData.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billing Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        // countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 21\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 19\n          }\n        }, a.place, \", \", a.house_name), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 19\n          }\n        }, a.area), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 19\n          }\n        }, a.pin_code)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 19\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 19\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 33\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem // countries={countries}\n        ,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        userID: userID // countries={countries}\n        ,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 13\n      }\n    }, this.handleGetActiveItem()), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 13\n      }\n    }), activeItem === \"Shipping Address\" ? /*#__PURE__*/React.createElement(Profile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 15\n      }\n    }) : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/containers/Profile.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","paymentListURL","authAxios","UPDATE_FORM","CREATE_FORM","AddressForm","Component","state","error","loading","formData","address_type","palce","area","road","pin_code","default","id","user","saving","success","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","then","res","callback","catch","err","put","componentDidMount","address","render","place","house_name","village","JSON","stringify","Profile","addresses","countries","selectedAddress","handleItemClick","handleFetchAddresses","handleGetActiveItem","handleFormatCountries","keys","Object","map","k","key","text","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","get","data","handleFetchCountries","renderAddresses","a","length","isAuthenticated","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Message,\n  Segment,\n  Select,\n  Table\n} from \"semantic-ui-react\";\nimport {\n  countryListURL,\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  paymentListURL\n} from \"../constants\";\nimport { authAxios } from \"../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\n// class PaymentHistory extends React.Component {\n//   state = {\n//     payments: []\n//   };\n\n// componentDidMount() {\n//   this.handleFetchPayments();\n// }\n\n// handleFetchPayments = () => {\n//   this.setState({ loading: true });\n//   authAxios\n//     .get(paymentListURL)\n//     .then(res => {\n//       this.setState({\n//         loading: false,\n//         payments: res.data\n//       });\n//     })\n//     .catch(err => {\n//       this.setState({ error: err, loading: false });\n//     });\n// };\n\n// render() {\n//   const { payments } = this.state;\n//   return (\n//     <Table celled>\n//       <Table.Header>\n//           <Table.Row>\n//             <Table.HeaderCell>ID</Table.HeaderCell>\n//             <Table.HeaderCell>Amount</Table.HeaderCell>\n//             <Table.HeaderCell>Date</Table.HeaderCell>\n//           </Table.Row>\n//         </Table.Header>\n//         <Table.Body>\n//           {payments.map(p => {\n//             return (\n//               <Table.Row key={p.id}>\n//                 <Table.Cell>{p.id}</Table.Cell>\n//                 <Table.Cell>${p.amount}</Table.Cell>\n//                 <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n//               </Table.Row>\n//             );\n//           })}\n//         </Table.Body>\n//       </Table>\n//     );\n//   }\n// }\n\nclass AddressForm extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      address_type: \"\",\n      palce: \"\",\n      area: \"\",\n      road: \"\",\n      state: \"\",\n      pin_code: \"\",\n      default: false,\n      id: \"\",\n      user: 1\n    },\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSelectChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n        // address_type: activeItem === \"billingAddress\" ? \"S\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"S\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    // const { countries } = this.props;\n    const { error, formData, success, saving } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit} success={success} error={error}>\n        <Form.Input\n          required\n          name=\"place\"\n          placeholder=\"Place Name\"\n          onChange={this.handleChange}\n          value={formData.place}\n        />\n        <Form.Input\n          required\n          name=\"area\"\n          placeholder=\"Area Name\"\n          onChange={this.handleChange}\n          value={formData.area}\n        />\n        <Form.Input\n          required\n          name=\"house_name\"\n          placeholder=\"House Name\"\n          onChange={this.handleChange}\n          value={formData.house_name}\n        />\n        <Form.Input\n          required\n          name=\"road\"\n          placeholder=\"Road\"\n          onChange={this.handleChange}\n          value={formData.road}\n        />\n        {/* <Form.Field required>\n          <Select\n            loading={countries.length < 1}\n            fluid\n            clearable\n            search\n            options={countries}\n            name=\"country\"\n            placeholder=\"Country\"\n            onChange={this.handleSelectChange}\n            value={formData.country}\n          />\n        </Form.Field> */}\n        <Form.Input\n          required\n          name=\"village\"\n          placeholder=\"Village\"\n          onChange={this.handleChange}\n          value={formData.village}\n        />\n        <Form.Input\n          required\n          name=\"pin_code\"\n          placeholder=\"Pin Code\"\n          onChange={this.handleChange}\n          value={formData.pin_code}\n        />\n        <Form.Input\n          required\n          name=\"state\"\n          placeholder=\"state\"\n          onChange={this.handleChange}\n          value={formData.state}\n        />\n        <Form.Checkbox\n          name=\"default\"\n          label=\"Make this the default address?\"\n          onChange={this.handleToggleDefault}\n          checked={formData.default}\n        />\n        {success && (\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\n        )}\n        {error && (\n          <Message\n            error\n            header=\"There was an error\"\n            content={JSON.stringify(error)}\n          />\n        )}\n        <Form.Button disabled={saving} loading={saving} primary>\n          Save\n        </Form.Button>\n      </Form>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: \"billingAddress\",\n    addresses: [],\n    countries: [],\n    userID: null,\n    selectedAddress: null\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    if (activeItem === \"billingAddress\") {\n      return \"Billing Address\";\n    } else if (activeItem === \"shippingAddress\") {\n      return \"Shipping Address\";\n    }\n    return \"Payment History\";\n  };\n\n  handleFormatCountries = countries => {\n    const keys = Object.keys(countries);\n    return keys.map(k => {\n      return {\n        key: k,\n        text: countries[k],\n        value: k\n      };\n    });\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchCountries = () => {\n    authAxios\n      .get(countryListURL)\n      .then(res => {\n        this.setState({ countries: this.handleFormatCountries(res.data) });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n    this.setState({ selectedAddress: null });\n  };\n\n  renderAddresses = () => {\n    const {\n      activeItem,\n      addresses,\n      // countries,\n      selectedAddress,\n      userID\n    } = this.state;\n    return (\n      <React.Fragment>\n        <Card.Group>\n          {addresses.map(a => {\n            return (\n              <Card key={a.id}>\n                <Card.Content>\n                  {a.default && (\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\n                      Default\n                    </Label>\n                  )}\n                  <Card.Header>\n                    {a.place}, {a.house_name}\n                  </Card.Header>\n                  <Card.Meta>{a.area}</Card.Meta>\n                  <Card.Description>{a.pin_code}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Button\n                    color=\"yellow\"\n                    onClick={() => this.handleSelectAddress(a)}\n                  >\n                    Update\n                  </Button>\n                  <Button\n                    color=\"red\"\n                    onClick={() => this.handleDeleteAddress(a.id)}\n                  >\n                    Delete\n                  </Button>\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n        {addresses.length > 0 ? <Divider /> : null}\n        {selectedAddress === null ? (\n          <AddressForm\n            activeItem={activeItem}\n            // countries={countries}\n            formType={CREATE_FORM}\n            userID={userID}\n            callback={this.handleCallback}\n          />\n        ) : null}\n        {selectedAddress && (\n          <AddressForm\n            activeItem={activeItem}\n            userID={userID}\n            // countries={countries}\n            address={selectedAddress}\n            formType={UPDATE_FORM}\n            callback={this.handleCallback}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { activeItem, error, loading } = this.state;\n    const { isAuthenticated } = this.props;\n    if (!isAuthenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <Grid container columns={2} divided>\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            {error && (\n              <Message\n                error\n                header=\"There was an error\"\n                content={JSON.stringify(error)}\n              />\n            )}\n            {loading && (\n              <Segment>\n                <Dimmer active inverted>\n                  <Loader inverted>Loading</Loader>\n                </Dimmer>\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\n              </Segment>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Menu pointing vertical fluid>\n              <Menu.Item\n                name=\"Billing Address\"\n                active={activeItem === \"billingAddress\"}\n                onClick={() => this.handleItemClick(\"billingAddress\")}\n              />\n              <Menu.Item\n                name=\"Shipping Address\"\n                active={activeItem === \"shippingAddress\"}\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n              {/* <Menu.Item\n                name=\"Payment history\"\n                active={activeItem === \"paymentHistory\"}\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\n              /> */}\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header>{this.handleGetActiveItem()}</Header>\n            <Divider />\n            {activeItem === \"Shipping Address\" ? (\n              <Profile />\n            ) : (\n              this.renderAddresses()\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}