{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport { authAxios } from \"../../utils\";\nimport { orderListURL } from \"../../constants\";\n\nfunction Test() {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const columns = [{\n    title: \"Shop Name\",\n    field: \"shop_name\"\n  }, {\n    title: \"Total Amount\",\n    field: \"total\"\n  }, {\n    title: \"Data\",\n    field: \"start_date\"\n  }, {\n    title: \"Status\",\n    field: \"order_status\"\n  }];\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      const res = await authAxios.get(orderListURL);\n      setOrders(res.data);\n      setLoading(false);\n    };\n\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: columns,\n    data: orders // editable={{\n    //   onRowAdd: newData =>\n    //     new Promise(resolve => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         setState(prevState => {\n    //           const data = [...prevState.data];\n    //           data.push(newData);\n    //           return { ...prevState, data };\n    //         });\n    //       }, 600);\n    //     }),\n    //   onRowUpdate: (newData, oldData) =>\n    //     new Promise(resolve => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         if (oldData) {\n    //           setState(prevState => {\n    //             const data = [...prevState.data];\n    //             data[data.indexOf(oldData)] = newData;\n    //             return { ...prevState, data };\n    //           });\n    //         }\n    //       }, 600);\n    //     }),\n    //   onRowDelete: oldData =>\n    //     new Promise(resolve => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         setState(prevState => {\n    //           const data = [...prevState.data];\n    //           data.splice(data.indexOf(oldData), 1);\n    //           return { ...prevState, data };\n    //         });\n    //       }, 600);\n    //     })\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test.js"],"names":["React","useState","useEffect","Component","MaterialTable","Container","TableContainer","authAxios","orderListURL","Test","orders","setOrders","loading","setLoading","columns","title","field","fetchOrders","res","get","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMa,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAJc,CAAhB;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,WAAW,GAAG,YAAY;AAC9BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMX,SAAS,CAACY,GAAV,CAAcX,YAAd,CAAlB;AACAG,MAAAA,SAAS,CAACO,GAAG,CAACE,IAAL,CAAT;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAI,IAAAA,WAAW;AACZ,GATQ,EASN,EATM,CAAT;AAUA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,OAAO,EAAEH,OAFX;AAGE,IAAA,IAAI,EAAEJ,MAHR,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAgDD;;AAED,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\nimport { authAxios } from \"../../utils\";\nimport { orderListURL } from \"../../constants\";\n\nfunction Test() {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const columns = [\n    { title: \"Shop Name\", field: \"shop_name\" },\n    { title: \"Total Amount\", field: \"total\" },\n    { title: \"Data\", field: \"start_date\" },\n    { title: \"Status\", field: \"order_status\" }\n  ];\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      const res = await authAxios.get(orderListURL);\n      setOrders(res.data);\n      setLoading(false);\n    };\n\n    fetchOrders();\n  }, []);\n  return (\n    <Container>\n      <TableContainer>\n        <MaterialTable\n          title=\"Editable Example\"\n          columns={columns}\n          data={orders}\n          // editable={{\n          //   onRowAdd: newData =>\n          //     new Promise(resolve => {\n          //       setTimeout(() => {\n          //         resolve();\n          //         setState(prevState => {\n          //           const data = [...prevState.data];\n          //           data.push(newData);\n          //           return { ...prevState, data };\n          //         });\n          //       }, 600);\n          //     }),\n          //   onRowUpdate: (newData, oldData) =>\n          //     new Promise(resolve => {\n          //       setTimeout(() => {\n          //         resolve();\n          //         if (oldData) {\n          //           setState(prevState => {\n          //             const data = [...prevState.data];\n          //             data[data.indexOf(oldData)] = newData;\n          //             return { ...prevState, data };\n          //           });\n          //         }\n          //       }, 600);\n          //     }),\n          //   onRowDelete: oldData =>\n          //     new Promise(resolve => {\n          //       setTimeout(() => {\n          //         resolve();\n          //         setState(prevState => {\n          //           const data = [...prevState.data];\n          //           data.splice(data.indexOf(oldData), 1);\n          //           return { ...prevState, data };\n          //         });\n          //       }, 600);\n          //     })\n          // }}\n        />\n      </TableContainer>\n    </Container>\n  );\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}