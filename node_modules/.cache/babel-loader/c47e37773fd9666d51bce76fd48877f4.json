{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Test.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, paymentListURL, orderListURL } from \"../../constants\";\nimport { authAxios } from \"../../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1,\n        zip: \"\"\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: \"S\" // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: \"S\" // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      //   className={classes.form}\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"house_name\",\n      name: \"house_name\",\n      label: \"House Name\",\n      fullWidth: true,\n      autoComplete: \"house_name\",\n      onChange: this.handleChange,\n      value: formData.house_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"place\",\n      name: \"place\",\n      label: \"Place Name\",\n      fullWidth: true,\n      autoComplete: \"place\",\n      onChange: this.handleChange,\n      value: formData.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"area\",\n      name: \"area\",\n      label: \"Area Name\",\n      fullWidth: true,\n      autoComplete: \"area\",\n      onChange: this.handleChange,\n      value: formData.area,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"road_name\",\n      name: \"road_name\",\n      label: \"Road Name\",\n      fullWidth: true,\n      autoComplete: \"road_name\",\n      onChange: this.handleChange,\n      value: formData.road_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"village\",\n      name: \"village\",\n      label: \"Village\",\n      fullWidth: true // autoComplete=\"village\"\n      ,\n      onChange: this.handleChange,\n      value: formData.village,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"district\",\n      name: \"district\",\n      label: \"District\",\n      fullWidth: true // autoComplete=\"district\"\n      ,\n      onChange: this.handleChange,\n      value: formData.district,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"state\",\n      name: \"state\",\n      label: \"State\",\n      fullWidth: true,\n      onChange: this.handleChange,\n      value: formData.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"pin_code\",\n      name: \"pin_code\",\n      label: \"Pin Code\",\n      fullWidth: true,\n      autoComplete: \"pin_code\",\n      onChange: this.handleChange,\n      value: formData.pin_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"phone_number\",\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      fullWidth: true,\n      autoComplete: \"phone_number\",\n      onChange: this.handleChange,\n      value: formData.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    })), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"shippingAddress\",\n      addresses: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billing Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      } else if (activeItem === \"addAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Shipping Address\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 21\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 19\n          }\n        }, a.house_name, \", \", a.road_name), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 19\n          }\n        }, a.place), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 19\n          }\n        }, a.pin_code)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 19\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 19\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 33\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        userID: userID,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props; // if (!isAuthenticated) {\n    //   return <Redirect to=\"/login\" />;\n    // }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 3,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }\n    }, this.handleGetActiveItem()), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 13\n      }\n    }), activeItem === \"paymentHistory\" ? null : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Test.js"],"names":["React","connect","Redirect","TextField","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","paymentListURL","orderListURL","authAxios","UPDATE_FORM","CREATE_FORM","AddressForm","Component","state","error","loading","formData","address_type","apartment_address","country","default","id","street_address","user","zip","saving","success","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","then","res","callback","catch","err","put","componentDidMount","address","render","countries","house_name","place","area","road_name","village","district","pin_code","phone_number","JSON","stringify","Profile","addresses","selectedAddress","handleItemClick","handleFetchAddresses","handleGetActiveItem","handleFormatCountries","keys","Object","map","k","key","text","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","get","data","handleFetchCountries","renderAddresses","a","length","isAuthenticated","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Message,\n  Segment,\n  Select,\n  Table\n} from \"semantic-ui-react\";\nimport {\n  countryListURL,\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  paymentListURL,\n  orderListURL\n} from \"../../constants\";\nimport { authAxios } from \"../../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      address_type: \"\",\n      apartment_address: \"\",\n      country: \"\",\n      default: false,\n      id: \"\",\n      street_address: \"\",\n      user: 1,\n      zip: \"\"\n    },\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSelectChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n        // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n        // address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { countries } = this.props;\n    const { error, formData, success, saving } = this.state;\n    return (\n      <form\n        //   className={classes.form}\n        noValidate\n        onSubmit={this.handleSubmit}\n        success={success}\n        error={error}\n      >\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"house_name\"\n              name=\"house_name\"\n              label=\"House Name\"\n              fullWidth\n              autoComplete=\"house_name\"\n              onChange={this.handleChange}\n              value={formData.house_name}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"place\"\n              name=\"place\"\n              label=\"Place Name\"\n              fullWidth\n              autoComplete=\"place\"\n              onChange={this.handleChange}\n              value={formData.place}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"area\"\n              name=\"area\"\n              label=\"Area Name\"\n              fullWidth\n              autoComplete=\"area\"\n              onChange={this.handleChange}\n              value={formData.area}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"road_name\"\n              name=\"road_name\"\n              label=\"Road Name\"\n              fullWidth\n              autoComplete=\"road_name\"\n              onChange={this.handleChange}\n              value={formData.road_name}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"village\"\n              name=\"village\"\n              label=\"Village\"\n              fullWidth\n              // autoComplete=\"village\"\n              onChange={this.handleChange}\n              value={formData.village}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"district\"\n              name=\"district\"\n              label=\"District\"\n              fullWidth\n              // autoComplete=\"district\"\n              onChange={this.handleChange}\n              value={formData.district}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"state\"\n              name=\"state\"\n              label=\"State\"\n              fullWidth\n              onChange={this.handleChange}\n              value={formData.state}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"pin_code\"\n              name=\"pin_code\"\n              label=\"Pin Code\"\n              fullWidth\n              autoComplete=\"pin_code\"\n              onChange={this.handleChange}\n              value={formData.pin_code}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"phone_number\"\n              name=\"phone_number\"\n              label=\"Phone Number\"\n              fullWidth\n              autoComplete=\"phone_number\"\n              onChange={this.handleChange}\n              value={formData.phone_number}\n            />\n          </Grid>\n\n          {success && (\n            <Message\n              success\n              header=\"Success!\"\n              content=\"Your address was saved\"\n            />\n          )}\n          {error && (\n            <Message\n              error\n              header=\"There was an error\"\n              content={JSON.stringify(error)}\n            />\n          )}\n          {/* <Form.Button disabled={saving} loading={saving} primary>\n            Save\n          </Form.Button> */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={saving}\n            loading={saving}\n            primary\n          >\n            Submit\n          </Button>\n        </Grid>\n      </form>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: \"shippingAddress\",\n    addresses: [],\n    userID: null,\n    selectedAddress: null\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    if (activeItem === \"billingAddress\") {\n      return \"Billing Address\";\n    } else if (activeItem === \"shippingAddress\") {\n      return \"Shipping Address\";\n    } else if (activeItem === \"addAddress\") {\n      return \"Shipping Address\";\n    }\n    return \"Shipping Address\";\n  };\n\n  handleFormatCountries = countries => {\n    const keys = Object.keys(countries);\n    return keys.map(k => {\n      return {\n        key: k,\n        text: countries[k],\n        value: k\n      };\n    });\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchCountries = () => {\n    authAxios\n      .get(countryListURL)\n      .then(res => {\n        this.setState({ countries: this.handleFormatCountries(res.data) });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n    this.setState({ selectedAddress: null });\n  };\n\n  renderAddresses = () => {\n    const {\n      activeItem,\n      addresses,\n      countries,\n      selectedAddress,\n      userID\n    } = this.state;\n    return (\n      <React.Fragment>\n        <Card.Group>\n          {addresses.map(a => {\n            return (\n              <Card key={a.id}>\n                <Card.Content>\n                  {a.default && (\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\n                      Default\n                    </Label>\n                  )}\n                  <Card.Header>\n                    {a.house_name}, {a.road_name}\n                  </Card.Header>\n                  <Card.Meta>{a.place}</Card.Meta>\n                  <Card.Description>{a.pin_code}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Button\n                    color=\"yellow\"\n                    onClick={() => this.handleSelectAddress(a)}\n                  >\n                    Update\n                  </Button>\n                  <Button\n                    color=\"red\"\n                    onClick={() => this.handleDeleteAddress(a.id)}\n                  >\n                    Delete\n                  </Button>\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n        {addresses.length > 0 ? <Divider /> : null}\n        {selectedAddress === null ? (\n          <AddressForm\n            activeItem={activeItem}\n            formType={CREATE_FORM}\n            userID={userID}\n            callback={this.handleCallback}\n          />\n        ) : null}\n        {selectedAddress && (\n          <AddressForm\n            activeItem={activeItem}\n            userID={userID}\n            address={selectedAddress}\n            formType={UPDATE_FORM}\n            callback={this.handleCallback}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { activeItem, error, loading } = this.state;\n    const { isAuthenticated } = this.props;\n    // if (!isAuthenticated) {\n    //   return <Redirect to=\"/login\" />;\n    // }\n    return (\n      <Grid container columns={3} divided>\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            {error && (\n              <Message\n                error\n                header=\"There was an error\"\n                content={JSON.stringify(error)}\n              />\n            )}\n            {loading && (\n              <Segment>\n                <Dimmer active inverted>\n                  <Loader inverted>Loading</Loader>\n                </Dimmer>\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\n              </Segment>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={12}>\n            <Menu>\n              <Menu.Item\n                name=\"Billing Address\"\n                active={activeItem === \"billingAddress\"}\n                onClick={() => this.handleItemClick(\"billingAddress\")}\n              />\n              <Menu.Item\n                name=\"Shipping Address\"\n                active={activeItem === \"shippingAddress\"}\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header>{this.handleGetActiveItem()}</Header>\n            <Divider />\n            {activeItem === \"paymentHistory\" ? null : this.renderAddresses()}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}