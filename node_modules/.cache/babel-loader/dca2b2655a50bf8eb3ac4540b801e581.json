{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Test2.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\"; // import Button from \"@material-ui/core/Button\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\"; // import Grid from \"@material-ui/core/Grid\";\n// import { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\"; // import Card from \"@material-ui/core/Card\";\n\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { spacing } from \"@material-ui/system\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, placeListURL, areaListURL } from \"../../constants\";\nimport { authAxios } from \"../../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\"; // const useStyles = makeStyles({\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  card: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2)\n  }\n}));\n\nconst styles = theme => ({\n  paper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(3)\n    }\n  },\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  tab: {\n    flexGrow: 1,\n    maxWidth: 920\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  card: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  form: {\n    padding: \"30px\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        house_name: \"\",\n        place: \"\",\n        area: \"\",\n        road_name: \"\",\n        village: \"\",\n        district: \"\",\n        state: \"\",\n        pin_code: \"\",\n        phone_number: \"\",\n        default: false,\n        id: \"\",\n        user: 1\n      },\n      saving: false,\n      success: false,\n      selectedPlace: \"Kolapparamb\",\n      areas: [],\n      places: []\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChangePlace = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata,\n        selectedPlace: e.target.value\n      }); // this.fetchAreas();\n      // console.log(\"fetching area\");\n    };\n\n    this.fetchPlaces = () => {\n      this.setState({\n        loading: true\n      });\n      console.log(\"mounted\");\n      authAxios.get(placeListURL).then(res => {\n        this.setState({\n          places: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      // console.log(\"value\");\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n\n    this.fetchPlaces(); // this.fetchAreas();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving,\n      selectedPlace,\n      places,\n      areas\n    } = this.state; // console.log(selectedPlace);\n    // console.log(formData.place);\n    // console.log(places);\n    // console.log(areas);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      elevation: 3,\n      mt: 10,\n      mb: 10,\n      style: {\n        padding: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }\n    }), success && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, \"Success\"), \"Your address was saved\"), error && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 15\n      }\n    }, JSON.stringify(error)), \"This is an error alert \\u2014 \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 40\n      }\n    }, \"check it out!\")), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NativeSelect, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      name: \"place\",\n      onChange: this.handleChangePlace,\n      inputProps: {\n        \"aria-label\": \"Place\"\n      },\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }, \"Select your place\"), places.map(place => /*#__PURE__*/React.createElement(\"option\", {\n      value: place.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }\n    }, place.name)))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"area\",\n      name: \"area\",\n      label: \"Area Name\",\n      fullWidth: true,\n      autoComplete: \"area\",\n      onChange: this.handleChange,\n      value: formData.area,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"house_name\",\n      name: \"house_name\",\n      label: \"House Name\",\n      fullWidth: true,\n      autoComplete: \"house_name\",\n      onChange: this.handleChange,\n      value: formData.house_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"road_name\",\n      name: \"road_name\",\n      label: \"Road Name\",\n      fullWidth: true,\n      autoComplete: \"road_name\",\n      onChange: this.handleChange,\n      value: formData.road_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"village\",\n      name: \"village\",\n      label: \"Village\",\n      fullWidth: true // autoComplete=\"village\"\n      ,\n      onChange: this.handleChange,\n      value: formData.village,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"district\",\n      name: \"district\",\n      label: \"District\",\n      fullWidth: true // autoComplete=\"district\"\n      ,\n      onChange: this.handleChange,\n      value: formData.district,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"state\",\n      name: \"state\",\n      label: \"State\",\n      fullWidth: true,\n      onChange: this.handleChange,\n      value: formData.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"pin_code\",\n      name: \"pin_code\",\n      label: \"Pin Code\",\n      fullWidth: true,\n      autoComplete: \"pin_code\",\n      onChange: this.handleChange,\n      value: formData.pin_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"phone_number\",\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      fullWidth: true,\n      autoComplete: \"phone_number\",\n      onChange: this.handleChange,\n      value: formData.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"best\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 28\n        }\n      }),\n      label: \"Default Address\",\n      name: \"default\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"shippingAddress\",\n      addresses: [],\n      userID: null,\n      selectedAddress: null // places: []\n\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {// this.fetchPlaces();\n      });\n    };\n\n    this.handleAddAddress = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"addAddress\") {\n        return \"addAddress\";\n      }\n\n      return \"Shipping Address\";\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      }); // console.log(address);\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"S\")) // .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\n      .then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        selectedAddress,\n        userID\n      } = this.state;\n      return (\n        /*#__PURE__*/\n        // <Container className={classes.cardGrid}>\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          maxWidth: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 9\n          }\n        }, addresses.map(a => {\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            key: a.id,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(CardContent, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 21\n            }\n          }, a.default && /*#__PURE__*/React.createElement(Badge, {\n            badgeContent: \"Default\",\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 23\n            }\n          }, a.place), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            color: \"textPrimary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 23\n            }\n          }, a.house_name, \" \", a.area, \" \", a.roa), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"body2\",\n            component: \"p\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 23\n            }\n          }, a.village, /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 25\n            }\n          }), a.pin_code)), /*#__PURE__*/React.createElement(CardActions, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(EditIcon, {\n            onClick: () => this.handleSelectAddress(a),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(IconButton, {\n            \"aria-label\": \"Delete\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(DeleteSharpIcon, {\n            onClick: () => this.handleDeleteAddress(a.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 25\n            }\n          }))))));\n        })))\n      );\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses(); // this.handleFetchCountries();\n\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // const bull = <span className={classes.bullet}>•</span>;\n\n    const {\n      activeItem,\n      error,\n      loading,\n      userID,\n      addresses,\n      selectedAddress // places\n\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props; // console.log(places);\n    // if (!isAuthenticated) {\n    //   return <Redirect to=\"/login\" />;\n    // }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      align: \"middle\",\n      className: classes.loading,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 15\n      }\n    })), error && /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 15\n      }\n    }, JSON.stringify(error)), \"This is an error alert \\u2014 \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 40\n      }\n    }, \"check it out!\")), /*#__PURE__*/React.createElement(Paper, {\n      square: true,\n      className: classes.tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      variant: \"fullWidth\",\n      indicatorColor: \"secondary\",\n      textColor: \"secondary\",\n      \"aria-label\": \"icon label tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      icon: /*#__PURE__*/React.createElement(ListIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 23\n        }\n      }),\n      label: \"My Delivery Addresses \",\n      name: \"shippingAddress\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      icon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 23\n        }\n      }),\n      label: \"Add Address\",\n      name: \"addAddress\",\n      active: activeItem === \"addAddress\",\n      onClick: () => this.handleItemClick(\"addAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 11\n      }\n    }), activeItem === \"addAddress\" ? /*#__PURE__*/React.createElement(AddressForm, {\n      activeItem: activeItem,\n      formType: CREATE_FORM,\n      userID: userID // places={places}\n      ,\n      callback: this.handleCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 13\n      }\n    }) : this.renderAddresses(), selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n      activeItem: activeItem,\n      userID: userID,\n      address: selectedAddress,\n      formType: UPDATE_FORM // places={places}\n      ,\n      callback: this.handleCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n}; // export default connect(mapStateToProps)(Profile);\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(Profile));","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Profile/Test2.js"],"names":["React","connect","Redirect","TextField","Container","CssBaseline","Paper","Typography","makeStyles","useTheme","withStyles","CardActions","CardContent","EditIcon","DeleteSharpIcon","FormControlLabel","Radio","Tabs","Tab","PhoneIcon","AddIcon","ListIcon","Alert","AlertTitle","CircularProgress","Card","Grid","Button","spacing","IconButton","Badge","MailIcon","InputLabel","MenuItem","Select","NativeSelect","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","placeListURL","areaListURL","authAxios","UPDATE_FORM","CREATE_FORM","useStyles","theme","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","card","height","width","flexDirection","cardGrid","paddingTop","paddingBottom","paper","marginTop","padding","styles","flexWrap","tab","flexGrow","maxWidth","form","selectEmpty","AddressForm","Component","state","error","loading","formData","house_name","place","area","road_name","village","district","pin_code","phone_number","default","id","user","saving","success","selectedPlace","areas","places","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleChangePlace","fetchPlaces","console","log","get","then","res","data","catch","err","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","address_type","callback","put","componentDidMount","address","render","classes","JSON","stringify","justifyContent","map","Profile","addresses","selectedAddress","handleItemClick","handleAddAddress","handleFetchAddresses","handleGetActiveItem","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","renderAddresses","a","roa","isAuthenticated","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Grid from \"@material-ui/core/Grid\";\n// import { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\n// import Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { spacing } from \"@material-ui/system\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nimport {\n  countryListURL,\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  placeListURL,\n  areaListURL\n} from \"../../constants\";\nimport { authAxios } from \"../../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\n// const useStyles = makeStyles({\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  card: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2)\n  }\n}));\n\nconst styles = theme => ({\n  paper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(3)\n    }\n  },\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  tab: {\n    flexGrow: 1,\n    maxWidth: 920\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  card: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  form: {\n    padding: \"30px\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass AddressForm extends React.Component {\n  // constructor() {\n  //   super();\n  // }\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      house_name: \"\",\n      place: \"\",\n      area: \"\",\n      road_name: \"\",\n      village: \"\",\n      district: \"\",\n      state: \"\",\n      pin_code: \"\",\n      phone_number: \"\",\n      default: false,\n      id: \"\",\n      user: 1\n    },\n    saving: false,\n    success: false,\n    selectedPlace: \"Kolapparamb\",\n    areas: [],\n    places: []\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n    this.fetchPlaces();\n    // this.fetchAreas();\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChangePlace = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata,\n      selectedPlace: e.target.value\n    });\n    // this.fetchAreas();\n    // console.log(\"fetching area\");\n  };\n\n  fetchPlaces = () => {\n    this.setState({ loading: true });\n    console.log(\"mounted\");\n    authAxios\n      .get(placeListURL)\n      .then(res => {\n        this.setState({ places: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  // fetchAreas = () => {\n  //   const { selectedPlace } = this.state;\n  //   const { formData } = this.state;\n  //   console.log(selectedPlace);\n  //   this.setState({ loading: true });\n  //   console.log(\"area mounted\");\n  //   authAxios\n  //     .get(areaListURL(selectedPlace))\n  //     .then(res => {\n  //       this.setState({ areas: res.data, loading: false, selectedPlace: \"\" });\n  //     })\n\n  //     .catch(err => {\n  //       this.setState({ error: err });\n  //     });\n  // };\n\n  handleSelectChange = (e, { name, value }) => {\n    // console.log(\"value\");\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving,\n      selectedPlace,\n      places,\n      areas\n    } = this.state;\n    // console.log(selectedPlace);\n    // console.log(formData.place);\n    // console.log(places);\n    // console.log(areas);\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        {/* <Container> */}\n        <Paper elevation={3} mt={10} mb={10} style={{ padding: \"30px\" }}>\n          <br></br>\n          <Typography variant=\"h5\" gutterBottom>\n            Address\n          </Typography>\n          <br></br>\n\n          {success && (\n            <Alert severity=\"success\">\n              <AlertTitle>Success</AlertTitle>\n              Your address was saved\n            </Alert>\n          )}\n\n          {error && (\n            <Alert severity=\"error\">\n              <AlertTitle>{JSON.stringify(error)}</AlertTitle>\n              This is an error alert — <strong>check it out!</strong>\n            </Alert>\n          )}\n          <form\n            noValidate\n            onSubmit={this.handleSubmit}\n            success={success}\n            error={error}\n          >\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <NativeSelect\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\n                  name=\"place\"\n                  onChange={this.handleChangePlace}\n                  inputProps={{ \"aria-label\": \"Place\" }}\n                  fullWidth\n                >\n                  <option value=\"\" disabled>\n                    Select your place\n                  </option>\n                  {places.map(place => (\n                    <option value={place.name}>{place.name}</option>\n                  ))}\n                </NativeSelect>\n              </Grid>\n              {/* <Grid item xs={12}>\n                <NativeSelect\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\n                  name=\"area\"\n                  onChange={this.handleChangePlace}\n                  inputProps={{ \"aria-label\": \"Place\" }}\n                  fullWidth\n                >\n                  <option value=\"\" disabled>\n                    Select your area\n                  </option>\n                  {areas.map(area => (\n                    <option value={area.name}>{area.name}</option>\n                  ))}\n                </NativeSelect>\n              </Grid> */}\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"area\"\n                  name=\"area\"\n                  label=\"Area Name\"\n                  fullWidth\n                  autoComplete=\"area\"\n                  onChange={this.handleChange}\n                  value={formData.area}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"house_name\"\n                  name=\"house_name\"\n                  label=\"House Name\"\n                  fullWidth\n                  autoComplete=\"house_name\"\n                  onChange={this.handleChange}\n                  value={formData.house_name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"road_name\"\n                  name=\"road_name\"\n                  label=\"Road Name\"\n                  fullWidth\n                  autoComplete=\"road_name\"\n                  onChange={this.handleChange}\n                  value={formData.road_name}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"village\"\n                  name=\"village\"\n                  label=\"Village\"\n                  fullWidth\n                  // autoComplete=\"village\"\n                  onChange={this.handleChange}\n                  value={formData.village}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"district\"\n                  name=\"district\"\n                  label=\"District\"\n                  fullWidth\n                  // autoComplete=\"district\"\n                  onChange={this.handleChange}\n                  value={formData.district}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  id=\"state\"\n                  name=\"state\"\n                  label=\"State\"\n                  fullWidth\n                  onChange={this.handleChange}\n                  value={formData.state}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"pin_code\"\n                  name=\"pin_code\"\n                  label=\"Pin Code\"\n                  fullWidth\n                  autoComplete=\"pin_code\"\n                  onChange={this.handleChange}\n                  value={formData.pin_code}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"phone_number\"\n                  name=\"phone_number\"\n                  label=\"Phone Number\"\n                  fullWidth\n                  autoComplete=\"phone_number\"\n                  onChange={this.handleChange}\n                  value={formData.phone_number}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  value=\"best\"\n                  control={<Radio />}\n                  label=\"Default Address\"\n                  name=\"default\"\n                  onChange={this.handleToggleDefault}\n                  checked={formData.default}\n                />\n              </Grid>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={saving}\n                loading={saving}\n                primary\n              >\n                Submit\n              </Button>\n            </Grid>\n          </form>\n        </Paper>\n        {/* </Container> */}\n      </React.Fragment>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: \"shippingAddress\",\n    addresses: [],\n    userID: null,\n    selectedAddress: null\n    // places: []\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    // this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {\n      // this.fetchPlaces();\n    });\n  };\n\n  // fetchPlaces = () => {\n  //   this.setState({ loading: true });\n  //   console.log(\"mounted\");\n  //   authAxios\n  //     .get(placeListURL)\n  //     .then(res => {\n  //       this.setState({ places: res.data, loading: false });\n  //     })\n  //     .catch(err => {\n  //       this.setState({ error: err });\n  //     });\n  // };\n\n  handleAddAddress = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    if (activeItem === \"addAddress\") {\n      return \"addAddress\";\n    }\n    return \"Shipping Address\";\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n    // console.log(address);\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"S\"))\n      // .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n  };\n\n  renderAddresses = () => {\n    const { activeItem, addresses, selectedAddress, userID } = this.state;\n\n    return (\n      // <Container className={classes.cardGrid}>\n      <div>\n        <Grid container spacing={1} maxWidth=\"md\">\n          {addresses.map(a => {\n            return (\n              <React.Fragment>\n                <Grid item key={a.id} xs={12} sm={6} md={4}>\n                  <Card>\n                    <CardContent>\n                      {a.default && (\n                        <Badge badgeContent={\"Default\"} color=\"primary\"></Badge>\n                      )}\n                      {/* <FormControlLabel\n                        value=\"best\"\n                        control={<Radio />}\n                        label=\"Default Address\"\n                        name=\"default\"\n                        onChange={this.handleToggleDefault}\n                        checked={formData.default}\n                      /> */}\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {a.place}\n                      </Typography>\n                      <br />\n                      <Typography color=\"textPrimary\">\n                        {a.house_name} {a.area} {a.roa}\n                      </Typography>\n                      <Typography variant=\"body2\" component=\"p\">\n                        {a.village}\n                        <br />\n                        {a.pin_code}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <IconButton>\n                        <EditIcon onClick={() => this.handleSelectAddress(a)} />\n                      </IconButton>\n                      <IconButton aria-label=\"Delete\">\n                        <DeleteSharpIcon\n                          onClick={() => this.handleDeleteAddress(a.id)}\n                        />\n                      </IconButton>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              </React.Fragment>\n            );\n          })}\n        </Grid>\n      </div>\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    // const bull = <span className={classes.bullet}>•</span>;\n    const {\n      activeItem,\n      error,\n      loading,\n      userID,\n      addresses,\n      selectedAddress\n      // places\n    } = this.state;\n\n    const { isAuthenticated } = this.props;\n    // console.log(places);\n    // if (!isAuthenticated) {\n    //   return <Redirect to=\"/login\" />;\n    // }\n    return (\n      <React.Fragment>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {loading && (\n            <div\n              align=\"middle\"\n              className={classes.loading}\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <CircularProgress />\n            </div>\n          )}\n          {error && (\n            <Alert severity=\"error\">\n              <AlertTitle>{JSON.stringify(error)}</AlertTitle>\n              This is an error alert — <strong>check it out!</strong>\n            </Alert>\n          )}\n          <Paper square className={classes.tab}>\n            <Tabs\n              variant=\"fullWidth\"\n              indicatorColor=\"secondary\"\n              textColor=\"secondary\"\n              aria-label=\"icon label tabs example\"\n            >\n              <Tab\n                icon={<ListIcon />}\n                label=\"My Delivery Addresses \"\n                name=\"shippingAddress\"\n                active={activeItem === \"shippingAddress\"}\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n              <Tab\n                icon={<AddIcon />}\n                label=\"Add Address\"\n                name=\"addAddress\"\n                active={activeItem === \"addAddress\"}\n                onClick={() => this.handleItemClick(\"addAddress\")}\n              />\n            </Tabs>\n          </Paper>\n          <br></br>\n          {activeItem === \"addAddress\" ? (\n            <AddressForm\n              activeItem={activeItem}\n              formType={CREATE_FORM}\n              userID={userID}\n              // places={places}\n              callback={this.handleCallback}\n            />\n          ) : (\n            this.renderAddresses()\n          )}\n          {selectedAddress && (\n            <AddressForm\n              activeItem={activeItem}\n              userID={userID}\n              address={selectedAddress}\n              formType={UPDATE_FORM}\n              // places={places}\n              callback={this.handleCallback}\n            />\n          )}\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\n// export default connect(mapStateToProps)(Profile);\n\nexport default connect(mapStateToProps)(withStyles(styles)(Profile));\n"]},"metadata":{},"sourceType":"module"}