{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/containers/Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, paymentListURL } from \"../constants\";\nimport { authAxios } from \"../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\"; // class PaymentHistory extends React.Component {\n//   state = {\n//     payments: []\n//   };\n// componentDidMount() {\n//   this.handleFetchPayments();\n// }\n// handleFetchPayments = () => {\n//   this.setState({ loading: true });\n//   authAxios\n//     .get(paymentListURL)\n//     .then(res => {\n//       this.setState({\n//         loading: false,\n//         payments: res.data\n//       });\n//     })\n//     .catch(err => {\n//       this.setState({ error: err, loading: false });\n//     });\n// };\n//   render() {\n//     const { payments } = this.state;\n//     return (\n//       <Table celled>\n//         <Table.Header>\n//           <Table.Row>\n//             <Table.HeaderCell>ID</Table.HeaderCell>\n//             <Table.HeaderCell>Amount</Table.HeaderCell>\n//             <Table.HeaderCell>Date</Table.HeaderCell>\n//           </Table.Row>\n//         </Table.Header>\n//         <Table.Body>\n//           {payments.map(p => {\n//             return (\n//               <Table.Row key={p.id}>\n//                 <Table.Cell>{p.id}</Table.Cell>\n//                 <Table.Cell>${p.amount}</Table.Cell>\n//                 <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n//               </Table.Row>\n//             );\n//           })}\n//         </Table.Body>\n//       </Table>\n//     );\n//   }\n// }\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"S\",\n        house_name: \"\",\n        place: \"\",\n        area: \"\",\n        road_name: \"\",\n        district: \"\",\n        state: \"\",\n        pin_code: \"\",\n        phone_number: \"\",\n        default: false,\n        id: \"\",\n        user: 1\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      console.log(formData);\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n        console.log(success);\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"house_name\",\n      placeholder: \"house_name\",\n      onChange: this.handleChange,\n      value: formData.house_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"place\",\n      placeholder: \"Place\",\n      onChange: this.handleChange,\n      value: formData.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"area\",\n      placeholder: \"area\",\n      onChange: this.handleChange,\n      value: formData.area,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"road_name\",\n      placeholder: \"road_name\",\n      onChange: this.handleChange,\n      value: formData.road_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"district\",\n      placeholder: \"district\",\n      onChange: this.handleChange,\n      value: formData.district,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"state\",\n      placeholder: \"state\",\n      onChange: this.handleChange,\n      value: formData.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"pin_code\",\n      placeholder: \"Pin code\",\n      onChange: this.handleChange,\n      value: formData.pin_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"phone_number\",\n      placeholder: \"Phone number\",\n      onChange: this.handleChange,\n      value: formData.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billing Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 21\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 19\n          }\n        }, a.street_address, \", \", a.place), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 19\n          }\n        }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }\n        }, a.zip)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 19\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 19\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 33\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        countries: countries,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        userID: userID,\n        countries: countries,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment history\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 13\n      }\n    }, this.handleGetActiveItem()), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }\n    }), activeItem === \"paymentHistory\" ? /*#__PURE__*/React.createElement(Profile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 15\n      }\n    }) : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/containers/Profile.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","paymentListURL","authAxios","UPDATE_FORM","CREATE_FORM","AddressForm","Component","state","error","loading","formData","address_type","house_name","place","area","road_name","district","pin_code","phone_number","default","id","user","saving","success","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","console","log","post","then","res","callback","catch","err","put","componentDidMount","address","render","countries","JSON","stringify","Profile","addresses","selectedAddress","handleItemClick","handleFetchAddresses","handleGetActiveItem","handleFormatCountries","keys","Object","map","k","key","text","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","get","data","handleFetchCountries","renderAddresses","a","street_address","country","zip","length","isAuthenticated","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Message,\n  Segment,\n  Select,\n  Table\n} from \"semantic-ui-react\";\nimport {\n  countryListURL,\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  paymentListURL\n} from \"../constants\";\nimport { authAxios } from \"../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\n// class PaymentHistory extends React.Component {\n//   state = {\n//     payments: []\n//   };\n\n// componentDidMount() {\n//   this.handleFetchPayments();\n// }\n\n// handleFetchPayments = () => {\n//   this.setState({ loading: true });\n//   authAxios\n//     .get(paymentListURL)\n//     .then(res => {\n//       this.setState({\n//         loading: false,\n//         payments: res.data\n//       });\n//     })\n//     .catch(err => {\n//       this.setState({ error: err, loading: false });\n//     });\n// };\n\n//   render() {\n//     const { payments } = this.state;\n//     return (\n//       <Table celled>\n//         <Table.Header>\n//           <Table.Row>\n//             <Table.HeaderCell>ID</Table.HeaderCell>\n//             <Table.HeaderCell>Amount</Table.HeaderCell>\n//             <Table.HeaderCell>Date</Table.HeaderCell>\n//           </Table.Row>\n//         </Table.Header>\n//         <Table.Body>\n//           {payments.map(p => {\n//             return (\n//               <Table.Row key={p.id}>\n//                 <Table.Cell>{p.id}</Table.Cell>\n//                 <Table.Cell>${p.amount}</Table.Cell>\n//                 <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n//               </Table.Row>\n//             );\n//           })}\n//         </Table.Body>\n//       </Table>\n//     );\n//   }\n// }\n\nclass AddressForm extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      address_type: \"S\",\n      house_name: \"\",\n      place: \"\",\n      area: \"\",\n      road_name: \"\",\n      district: \"\",\n      state: \"\",\n      pin_code: \"\",\n      phone_number: \"\",\n      default: false,\n      id: \"\",\n      user: 1\n    },\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSelectChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    console.log(formData);\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n        console.log(success);\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { countries } = this.props;\n    const { error, formData, success, saving } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit} success={success} error={error}>\n        <Form.Input\n          required\n          name=\"house_name\"\n          placeholder=\"house_name\"\n          onChange={this.handleChange}\n          value={formData.house_name}\n        />\n        <Form.Input\n          required\n          name=\"place\"\n          placeholder=\"Place\"\n          onChange={this.handleChange}\n          value={formData.place}\n        />\n        <Form.Input\n          required\n          name=\"area\"\n          placeholder=\"area\"\n          onChange={this.handleChange}\n          value={formData.area}\n        />\n        <Form.Input\n          required\n          name=\"road_name\"\n          placeholder=\"road_name\"\n          onChange={this.handleChange}\n          value={formData.road_name}\n        />\n        <Form.Input\n          required\n          name=\"district\"\n          placeholder=\"district\"\n          onChange={this.handleChange}\n          value={formData.district}\n        />\n        <Form.Input\n          required\n          name=\"state\"\n          placeholder=\"state\"\n          onChange={this.handleChange}\n          value={formData.state}\n        />\n        <Form.Input\n          required\n          name=\"pin_code\"\n          placeholder=\"Pin code\"\n          onChange={this.handleChange}\n          value={formData.pin_code}\n        />\n        <Form.Input\n          required\n          name=\"phone_number\"\n          placeholder=\"Phone number\"\n          onChange={this.handleChange}\n          value={formData.phone_number}\n        />\n        <Form.Checkbox\n          name=\"default\"\n          label=\"Make this the default address?\"\n          onChange={this.handleToggleDefault}\n          checked={formData.default}\n        />\n        {success && (\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\n        )}\n        {error && (\n          <Message\n            error\n            header=\"There was an error\"\n            content={JSON.stringify(error)}\n          />\n        )}\n        <Form.Button disabled={saving} loading={saving} primary>\n          Save\n        </Form.Button>\n      </Form>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: \"billingAddress\",\n    addresses: [],\n    countries: [],\n    userID: null,\n    selectedAddress: null\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    if (activeItem === \"billingAddress\") {\n      return \"Billing Address\";\n    } else if (activeItem === \"shippingAddress\") {\n      return \"Shipping Address\";\n    }\n    return \"Payment History\";\n  };\n\n  handleFormatCountries = countries => {\n    const keys = Object.keys(countries);\n    return keys.map(k => {\n      return {\n        key: k,\n        text: countries[k],\n        value: k\n      };\n    });\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchCountries = () => {\n    authAxios\n      .get(countryListURL)\n      .then(res => {\n        this.setState({ countries: this.handleFormatCountries(res.data) });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n    this.setState({ selectedAddress: null });\n  };\n\n  renderAddresses = () => {\n    const {\n      activeItem,\n      addresses,\n      countries,\n      selectedAddress,\n      userID\n    } = this.state;\n    return (\n      <React.Fragment>\n        <Card.Group>\n          {addresses.map(a => {\n            return (\n              <Card key={a.id}>\n                <Card.Content>\n                  {a.default && (\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\n                      Default\n                    </Label>\n                  )}\n                  <Card.Header>\n                    {a.street_address}, {a.place}\n                  </Card.Header>\n                  <Card.Meta>{a.country}</Card.Meta>\n                  <Card.Description>{a.zip}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Button\n                    color=\"yellow\"\n                    onClick={() => this.handleSelectAddress(a)}\n                  >\n                    Update\n                  </Button>\n                  <Button\n                    color=\"red\"\n                    onClick={() => this.handleDeleteAddress(a.id)}\n                  >\n                    Delete\n                  </Button>\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n        {addresses.length > 0 ? <Divider /> : null}\n        {selectedAddress === null ? (\n          <AddressForm\n            activeItem={activeItem}\n            countries={countries}\n            formType={CREATE_FORM}\n            userID={userID}\n            callback={this.handleCallback}\n          />\n        ) : null}\n        {selectedAddress && (\n          <AddressForm\n            activeItem={activeItem}\n            userID={userID}\n            countries={countries}\n            address={selectedAddress}\n            formType={UPDATE_FORM}\n            callback={this.handleCallback}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { activeItem, error, loading } = this.state;\n    const { isAuthenticated } = this.props;\n    if (!isAuthenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <Grid container columns={2} divided>\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            {error && (\n              <Message\n                error\n                header=\"There was an error\"\n                content={JSON.stringify(error)}\n              />\n            )}\n            {loading && (\n              <Segment>\n                <Dimmer active inverted>\n                  <Loader inverted>Loading</Loader>\n                </Dimmer>\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\n              </Segment>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Menu pointing vertical fluid>\n              <Menu.Item\n                name=\"Billing Address\"\n                active={activeItem === \"billingAddress\"}\n                onClick={() => this.handleItemClick(\"billingAddress\")}\n              />\n              <Menu.Item\n                name=\"Shipping Address\"\n                active={activeItem === \"shippingAddress\"}\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n              <Menu.Item\n                name=\"Payment history\"\n                active={activeItem === \"paymentHistory\"}\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\n              />\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header>{this.handleGetActiveItem()}</Header>\n            <Divider />\n            {activeItem === \"paymentHistory\" ? (\n              <Profile />\n            ) : (\n              this.renderAddresses()\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}