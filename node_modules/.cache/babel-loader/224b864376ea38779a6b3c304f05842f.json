{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test2.js\";\n// import React, { useState, useEffect, Component } from \"react\";\n// import MaterialTable from \"material-table\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import { authAxios } from \"../../utils\";\n// import { orderListURL } from \"../../constants\";\n// function Test2() {\n//   const [orders, setOrders] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(orderListURL);\n//       setOrders(res.data);\n//       setLoading(false);\n//     };\n//     fetchOrders();\n//   }, []);\n//   const columns = [\n//     { title: \"Shop Name\", field: \"shop_name\" },\n//     { title: \"Total Amount\", field: \"total\" },\n//     { title: \"Data\", field: \"start_date\" },\n//     { title: \"Status\", field: \"order_status\" }\n//   ];\n//   //   function OneDetailPanel() {\n//   return (\n//     <MaterialTable\n//       title=\"One Detail Panel Preview\"\n//       columns={columns}\n//       data={orders}\n//       detailPanel={rowData => {\n//         return (\n//           <TableCell component=\"th\" scope=\"row\">\n//             {rowData.item.title}\n//           </TableCell>\n//         );\n//       }}\n//     />\n//   );\n// }\n// export default Test2;\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MUIDataTable from \"mui-datatables\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { authAxios } from \"../../utils\";\nimport { orderListURL } from \"../../constants\";\n\nclass Test2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: []\n    };\n\n    this.handleFetchOrders = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(orderListURL).then(res => {\n        this.setState({\n          loading: false,\n          orders: res.data\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchOrders();\n  }\n\n  render() {\n    const {\n      orders\n    } = this.state;\n    console.log(orders);\n    const columns1 = [\"shop_name\", \"total\", \"start_date\"];\n    const columns = [{\n      name: \"shop_name\",\n      options: {\n        filter: true\n      }\n    }, {\n      name: \"total\",\n      options: {\n        filter: true\n      }\n    }, {\n      name: \"start_date\",\n      options: {\n        filter: false\n      }\n    }];\n    const options = {\n      filter: true,\n      filterType: \"dropdown\",\n      responsive: \"scrollMaxHeight\",\n      expandableRows: true,\n      expandableRowsOnClick: true,\n      isRowExpandable: (dataIndex, expandedRows) => {\n        // Prevent expand/collapse of any row if there are 4 rows expanded already (but allow those already expanded to be collapsed)\n        if (expandedRows.data.length > 4 && expandedRows.data.filter(d => d.dataIndex === dataIndex).length === 0) return false;\n        return true;\n      },\n      rowsExpanded: [0, 1],\n      renderExpandableRow: (rowData, rowMeta) => {\n        const colSpan = rowData.length + 1;\n        console.log(rowMeta);\n        return /*#__PURE__*/React.createElement(TableRow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          colSpan: colSpan,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        }, rowData));\n      },\n      onRowsExpand: (curExpanded, allExpanded) => console.log(curExpanded, allExpanded)\n    };\n    const theme = createMuiTheme({\n      overrides: {\n        MUIDataTableSelectCell: {\n          expandDisabled: {\n            // Soft hide the button.\n            visibility: \"hidden\"\n          }\n        }\n      }\n    });\n    return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"ACME Employee list\",\n      data: orders,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Test2;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test2.js"],"names":["React","ReactDOM","MUIDataTable","TableRow","TableCell","MuiThemeProvider","createMuiTheme","authAxios","orderListURL","Test2","Component","state","orders","handleFetchOrders","setState","loading","get","then","res","data","catch","err","error","componentDidMount","render","console","log","columns1","columns","name","options","filter","filterType","responsive","expandableRows","expandableRowsOnClick","isRowExpandable","dataIndex","expandedRows","length","d","rowsExpanded","renderExpandableRow","rowData","rowMeta","colSpan","onRowsExpand","curExpanded","allExpanded","theme","overrides","MUIDataTableSelectCell","expandDisabled","visibility"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect, Component } from \"react\";\n// import MaterialTable from \"material-table\";\n// import TableCell from \"@material-ui/core/TableCell\";\n\n// import { authAxios } from \"../../utils\";\n// import { orderListURL } from \"../../constants\";\n\n// function Test2() {\n//   const [orders, setOrders] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       setLoading(true);\n//       const res = await authAxios.get(orderListURL);\n//       setOrders(res.data);\n//       setLoading(false);\n//     };\n\n//     fetchOrders();\n//   }, []);\n\n//   const columns = [\n//     { title: \"Shop Name\", field: \"shop_name\" },\n//     { title: \"Total Amount\", field: \"total\" },\n//     { title: \"Data\", field: \"start_date\" },\n//     { title: \"Status\", field: \"order_status\" }\n//   ];\n\n//   //   function OneDetailPanel() {\n//   return (\n//     <MaterialTable\n//       title=\"One Detail Panel Preview\"\n//       columns={columns}\n//       data={orders}\n//       detailPanel={rowData => {\n//         return (\n//           <TableCell component=\"th\" scope=\"row\">\n//             {rowData.item.title}\n//           </TableCell>\n//         );\n//       }}\n//     />\n//   );\n// }\n\n// export default Test2;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MUIDataTable from \"mui-datatables\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { authAxios } from \"../../utils\";\nimport { orderListURL } from \"../../constants\";\n\nclass Test2 extends React.Component {\n  state = {\n    orders: []\n  };\n\n  componentDidMount() {\n    this.handleFetchOrders();\n  }\n\n  handleFetchOrders = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(orderListURL)\n      .then(res => {\n        this.setState({\n          loading: false,\n          orders: res.data\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n  render() {\n    const { orders } = this.state;\n    console.log(orders);\n\n    const columns1 = [\"shop_name\", \"total\", \"start_date\"];\n    const columns = [\n      {\n        name: \"shop_name\",\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: \"total\",\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: \"start_date\",\n        options: {\n          filter: false\n        }\n      }\n    ];\n\n    const options = {\n      filter: true,\n      filterType: \"dropdown\",\n      responsive: \"scrollMaxHeight\",\n      expandableRows: true,\n      expandableRowsOnClick: true,\n      isRowExpandable: (dataIndex, expandedRows) => {\n        // Prevent expand/collapse of any row if there are 4 rows expanded already (but allow those already expanded to be collapsed)\n        if (\n          expandedRows.data.length > 4 &&\n          expandedRows.data.filter(d => d.dataIndex === dataIndex).length === 0\n        )\n          return false;\n        return true;\n      },\n      rowsExpanded: [0, 1],\n      renderExpandableRow: (rowData, rowMeta) => {\n        const colSpan = rowData.length + 1;\n        console.log(rowMeta);\n        return (\n          <TableRow>\n            <TableCell colSpan={colSpan}>{rowData}</TableCell>\n          </TableRow>\n        );\n      },\n      onRowsExpand: (curExpanded, allExpanded) =>\n        console.log(curExpanded, allExpanded)\n    };\n\n    const theme = createMuiTheme({\n      overrides: {\n        MUIDataTableSelectCell: {\n          expandDisabled: {\n            // Soft hide the button.\n            visibility: \"hidden\"\n          }\n        }\n      }\n    });\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <MUIDataTable\n          title={\"ACME Employee list\"}\n          data={orders}\n          columns={columns}\n          options={options}\n        />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Test2;\n"]},"metadata":{},"sourceType":"module"}