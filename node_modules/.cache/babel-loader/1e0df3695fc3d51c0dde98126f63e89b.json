{"ast":null,"code":"var _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { authAxios } from \"../../utils\";\nimport { orderListURL } from \"../../constants\";\n\nfunction Test() {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const columns = [{\n    title: \"Shop Name\",\n    field: \"shop_name\"\n  }, {\n    title: \"Surname\",\n    field: \"surname\"\n  }, {\n    title: \"Birth Year\",\n    field: \"birthYear\",\n    type: \"numeric\"\n  }, {\n    title: \"Birth Place\",\n    field: \"birthCity\",\n    lookup: {\n      34: \"İstanbul\",\n      63: \"Şanlıurfa\"\n    }\n  }];\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      const res = await authAxios.get(orderListURL);\n      setOrders(res.data);\n      setLoading(false);\n    };\n\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: columns,\n    data: orders // editable={{\n    //   onRowAdd: newData =>\n    //     new Promise(resolve => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         setState(prevState => {\n    //           const data = [...prevState.data];\n    //           data.push(newData);\n    //           return { ...prevState, data };\n    //         });\n    //       }, 600);\n    //     }),\n    //   onRowUpdate: (newData, oldData) =>\n    //     new Promise(resolve => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         if (oldData) {\n    //           setState(prevState => {\n    //             const data = [...prevState.data];\n    //             data[data.indexOf(oldData)] = newData;\n    //             return { ...prevState, data };\n    //           });\n    //         }\n    //       }, 600);\n    //     }),\n    //   onRowDelete: oldData =>\n    //     new Promise(resolve => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         setState(prevState => {\n    //           const data = [...prevState.data];\n    //           data.splice(data.indexOf(oldData), 1);\n    //           return { ...prevState, data };\n    //         });\n    //       }, 600);\n    //     })\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/django-react-ecommerce/src/components/Orders/Test.js"],"names":["React","useState","useEffect","Component","MaterialTable","authAxios","orderListURL","Test","orders","setOrders","loading","setLoading","columns","title","field","type","lookup","fetchOrders","res","get","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMW,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE,WAA9B;AAA2CC,IAAAA,IAAI,EAAE;AAAjD,GAHc,EAId;AACEF,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEE,IAAAA,MAAM,EAAE;AAAE,UAAI,UAAN;AAAkB,UAAI;AAAtB;AAHV,GAJc,CAAhB;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,WAAW,GAAG,YAAY;AAC9BN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMO,GAAG,GAAG,MAAMb,SAAS,CAACc,GAAV,CAAcb,YAAd,CAAlB;AACAG,MAAAA,SAAS,CAACS,GAAG,CAACE,IAAL,CAAT;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAM,IAAAA,WAAW;AACZ,GATQ,EASN,EATM,CAAT;AAUA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,IAAI,EAAEJ,MAHR,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4CD;;AAED,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport MaterialTable from \"material-table\";\n\nimport { authAxios } from \"../../utils\";\nimport { orderListURL } from \"../../constants\";\n\nfunction Test() {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const columns = [\n    { title: \"Shop Name\", field: \"shop_name\" },\n    { title: \"Surname\", field: \"surname\" },\n    { title: \"Birth Year\", field: \"birthYear\", type: \"numeric\" },\n    {\n      title: \"Birth Place\",\n      field: \"birthCity\",\n      lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" }\n    }\n  ];\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      const res = await authAxios.get(orderListURL);\n      setOrders(res.data);\n      setLoading(false);\n    };\n\n    fetchOrders();\n  }, []);\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={columns}\n      data={orders}\n      // editable={{\n      //   onRowAdd: newData =>\n      //     new Promise(resolve => {\n      //       setTimeout(() => {\n      //         resolve();\n      //         setState(prevState => {\n      //           const data = [...prevState.data];\n      //           data.push(newData);\n      //           return { ...prevState, data };\n      //         });\n      //       }, 600);\n      //     }),\n      //   onRowUpdate: (newData, oldData) =>\n      //     new Promise(resolve => {\n      //       setTimeout(() => {\n      //         resolve();\n      //         if (oldData) {\n      //           setState(prevState => {\n      //             const data = [...prevState.data];\n      //             data[data.indexOf(oldData)] = newData;\n      //             return { ...prevState, data };\n      //           });\n      //         }\n      //       }, 600);\n      //     }),\n      //   onRowDelete: oldData =>\n      //     new Promise(resolve => {\n      //       setTimeout(() => {\n      //         resolve();\n      //         setState(prevState => {\n      //           const data = [...prevState.data];\n      //           data.splice(data.indexOf(oldData), 1);\n      //           return { ...prevState, data };\n      //         });\n      //       }, 600);\n      //     })\n      // }}\n    />\n  );\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}